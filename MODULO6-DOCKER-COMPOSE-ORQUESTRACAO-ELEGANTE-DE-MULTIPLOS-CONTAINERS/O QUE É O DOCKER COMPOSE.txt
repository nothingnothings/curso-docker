











O QUE É O DOCKER COMPOSE?











É BEM FÁCIL DE ENTENDER...

















--> É UMA FERRAMENTA QUE TE DEIXA SUBSTITUIR OS COMANDOS DE 

'docker build ...' 


e 
'docker run ....' ...














MAS ELA TE DEIXA SUBSTITUIR MAIS DO QUE APENAS 1 ÚNICO 'DOCKER RUN' OU 'DOCKER BUILD'...















--> VÁRIOS COMANDOS DOCKER BUILD E DOCKER RUN, TUDO 




COM 

1 
ÚNICA 

'CONFIGURATION FILE',


E AÍ 

UMA SÉRIE 



DE 




'ORCHESTRATION COMMANDS' (build, start, stop) 


PARA 


COMEÇAR 

E PARAR 

TODOS 

ESSES CONTAINERS/SERVICES 




DE 1 VEZ....












TAMBÉM TE DEIXA 'BUILD ALL NECESSARY IMAGES' DE UMA VEZ... --> E AÍ VC PODE 



USAR APENAS 1 COMANDO PARA 'STOP EVERYTHING' 

E 

'BRING EVERYTHING DOWN'...












-> VC JÁ PODE ARMAZENAR COMANDOS DOCKER 


EM ARQUIVOS DE TEXTO,

MAS ISSO NÃO É MT CONVENIENTE..












--> COM O DOCKER-COMPOSE,

ESSE PROCESSO SERÁ BEM MAIS CONVENIENTE -->  COM O DOCKER COMPOSE,



VC 
TERÁ 




APENAS 1 ÚNICO CONFIG FILE,

QUE VC PODERÁ COMPARTILAHR COM QUALQUER 1,

E AÍ 

SERÁ 

APENAS 

1 ÚNICO 


COMANDO,

SEM COPIA E COLA,

QUE 

VAI 




'LEVERAGE' ESSA CONFIG FILE,

E QUE 

AÍ 


VAI 'BRING UP' 

OU 
'BRING DOWN' 


SEU APP INTEIRO...










SIDENOTE:







VC PODE 
USAR 

O DOCKER-COMPOSE EM 1 SINGLE-CONTAINER APP,



MAS 

ELE BRILHA BEM MAIS SE VC 


TEM 

MÚLTIPLOS 

CONTAINERS,

PQ 

AÍ 

VC 

ECONOMIZA 



1 MONTE DE COMANDOS EXTRAS E TEMPO...












--> O PROFESSOR, ENTRETNATO, QUER RESSALTAR 1 COISA:







1) O DOCKER-COMPOSE NÃO _ VAI _ SUBSTITUIR AS DOCKERFILES PARA 

'CUSTOM IMAGES'...



--> O DOCKER-COMPOSE TRABALHA JUNTO COM AS DOCKER FILES,
E NÃO 

SUBSTITUI AS DOCKERFILES...







2) O DOCKER COMPOSE NÃO SUBSTITUI 

IMAGES E CONTAINERS,


__ E SIM __ APENAS _ DEIXA __ O TRABALHO COM ELES BEM MAIS FÁCIL,

DEIXA O LAUNCH 

DE 


CONTAINERS BEM MAIS SIMPLES....








3) POR FIM, 


É IMPORTANTE DESTACAR QUE 

'O DOCKER COMPOSE NÃO É ADEQUADO PARA __ MANAGEAR__ MÚLTIPLOS CONTAINERS EM 

DIFERENTES HOSTS' ----------> O DOCKER COMPOSE SERVE, NA VERDADE,


PARA MANAGEAR MÚLTIPLOS CONTAINERRS 




EM __ 1 MESMO HOST__. ... --> E __ FALAREMOS __ SOBRE __ 


'O DEPLOY __ DE CONTAINERS EM SINGLE E MULTIPLE HOSTS'
 
  

  NA SECTION DE 'DEPLOYMENT'...



















  --> POR ENQUANTO, VAMOS RODAR TUDO NA NOSSA HOST MACHINE,


  QUE É APENAS 1 ÚNICA MACHINE (1 único host),



  POR ISSO QUE 

  O 



  DOCKER COMPOSE É PERFEITO, 

  NO MOMENTO...











  --> VC VAI USAR MT O DOCKER COMPOSE PARA 


  DEVELOPMENT,

  MAS PARA COISAS 

  ALÉM 


  DE DEVELOPMENT (COMO DEPLOY)...















OK... O DOCKER COMPOSE É BEM INTERESSANTE,

MAS COMO COMEÇAMOS COM ELE?









BEM, NÓS SEMPRE COMEÇAMOS COM 


O WRITE DE 1 FILE 'DOCKER COMPOSE'...















-> CONTRARIAMENTE AO DOCKER (sem o docker compose),



NÓS NÃO VAMOS PRIMARIAMENTE EXECUTAR COMANDOS NO TERMINAL --> A IDEIA, EM VEZ DISSO,



É SALVAR TEMPO POR MEIO DO WRITE EM 1 ARQUIVO, O ARQUIVO DOCKER-COMPOSE...









-> VC VAI COLOCAR 1 MONTE DE CONFIG DENTRO 

DESSA FILE...














--> E, DENTRO DESSA FILE,

VC 


DEFINE 1 PUNHADO DE COISAS/COMPONENTS 


QUE 



VÃO 

COMPOR 

SEU 

MULTI-COMPONENT APP...















--> O 'CORAÇÃO' E COISA MAIS IMPORTANTE QUE VC 

DEFINE EM 1 COMPOSE FILE 

SÃO 

OS CHAMADOS 'SERVICES'...












OS SERVICES SÃO BASICAMENTE 



__OS __ CONTAINERS__ QUE __ 


COMPORÃO 

SUA MULTI-CONTAINER APP....













MAS, EMBAIXO DE CADA SERVICE,

VC 

PODE 


CONFIGURAR CADA SERVICE/CONTAINER --> VC PODE CONFIGURAR 

EM QUE 

PORT 

ESSE CONTAINER 


VAI SER PUBLICADO,





QUAIS ENV VARIABLES ELE VAI USAR,




QUAIS VOLUMES SERÃO ASSIGNADOS A ESSE CONTAINER,





PODERÁ 


ASSIGNAR NETWORKS,

ETC ETC... --> PODERÁ FAZER TUDO 

O QUE VC FAZIA 


COM O 

DOCKER NO TERMINAL ANTERIORMENTE...










pq a ideia do compose é JUSTAMENTE SUBSTITUIR O WRITE DE COMANDOS NO TERMINAL...











-- DEVEMOS COMEÇAR,

USAR O PROJETO 



DO ÚLTIMO MÓDULO,

MAS AGORA COM COMPOSE,

EM VEZ DO WRITE DE TODOS OS COMANDOS INDIVIDUAIS...