




POR FIM,

AO LONGO DAS ÚLTIMAS LIÇÕES,

VIMOS TODOS OS BASICS,

MAS TAMBÉM FIZEMOS
 
 DEPLOY 

 DE 


 NOSSA CONTAINERIZED APPLICATION... 











 SE FAZER DEPLOY É INTERESSANTE A VOCÊ,


 VC DEVE TER ALGUMAS COISAS EM MENTE:













 1) NÃO USAMOS BIND MOUNTS QUANDO FAZEMOS DEPLOY 

 DE 

 NOSSO APP... -------> EM VEZ DISSO,

 USE 1 VOLUME COMUM (named volume),


 OU ENTÃO USE UMA SIMPLES INSTRUCTION DE 'COPY . . ',


 PARA GARANTIR QUE TUDO QUE 


 PRECISA FICAR DENTRO 


 DE 1 CONTAINER 


 FIQUE _ DENTRO DELE...








 --> BIND MOUNTS SÃO PRIMARIAMENTE 

UM RECURSO DE DEVELOPMENT, USADA PARA FAZER 'MIRROR' DE SEU SOURCE-CODE OU DE ALGUMA CONFIG 

 PARA DENTRO DO CONTAINER,


 DURANTE O DEVELOPMENT...










 2) MULTI-CONTAINER PROJECTS,


 E ATÉ MESMO 'SINGLE-CONTAINER PROJECTS' AMBICIOSOS,



 __ ELES PODEM PRECISAR DE MÚLTIPLOS HOSTS... --->





 PQ, LOCALMETNE,

 TUDO 
 ACONTECE 


 EM 1 ÚNICA HOST MACHINE ... -> MAS ISSO NÃO É NECESSARIAMENTE VERDADE QUANDO 


 VC 

 TRANSPORTA SEU APP PARA A WEB --> 1 ÚNICA MACHINE PODE TALVEZ NÃO TER 


 PODER SUFICIENTE,




 E NESSES CASOS VC VAI PRECISAR DE MÚLTIPLAS DELAS... -----> EM CASOS COMO ESSES,




 AS COISAS PODEM FICAR MAIS COMPLEXAS,


 E AÍ 
 

 SÓ O 'DOCKER RUN'


 E o

 'DOCKER-COMPOSE'



 TALVEZ NÃO BASTEM MAIS...















 --> MAS O PROFESSOR QUER DESTACAR QUE 

 '''PODEMOS RODAR __ MÚLTIPLOS CONTAINERS 

 EM 1 MESMO HOST'''',





 QUE __ TUDO DEPENDE DE NOSSO APP,


 DOS HARDWARE REQUIREMENTS,

 INCOMING TRAFFIC E OUTROS DETALHES...











 -----> OK... MAS QUANDO O ASSUNTO É DEPLOYMENT,

 O 
 PROFESSOR 

 NOS MOSTROU 


 1 KEY FEATURE,

 QUE 


 SÃO AS 'MULTI-STAGE BUILDS',

 QUE 

 PODEM SER MUITO ÚTEIS --> ISSO TE DEIXA CONSTRUIR 




 CONTAINERS  
 QUE TALVEZ NECESSITEM DE 1 'BUILD STEP'

 PARA 

 CONSEGUIR 

 O 

 FINAL OUTPUT, QUE VC DESEJA DEPLOYAR -->  VOCÊ TIPICAMENTE 




 TEM SETUPS ASSIM 


 EM FRONTEND APPLICATIONS,


 COMO 

 REACT, ANGULAR E VUE SPAs...










 MULTI-STAGE BUILDS DEIXAM O DEPLOY DE CONTAINERS 

 DESSE TIPO 

 BEM MAIS FÁCEIS,


 PQ AÍ 
 VC 

 PODE INCLUIR ESSA BUILD STEP NA IMAGE,







 E __ AÍ ___ TER 1 CONTAINER QUE TERÁ O 'FINISHED OUTPUT'



SENDO SERVIDO/STARTADO...












--> É POR ISSO QUE 'MULTI-STAGE BUILDS'

são uma feature 


IMPORTANTE...












OK... MAS QUANDO O ASSUNTO É DEPLOYMENT PROCESS,

TEMOS 

SEMPRE 1 

TRADEOFF QUE DEVEMOS TER EM  MENTE:












'CONTROL VS EASE-OF-USE'...




'FREEDOM VS SECURITY'...



'EC2 VS ECS''



RENTED REMOTE MACHINES VS MANAGED SERVICES...

















-> OK... TEMOS QUE SEMPRE CONSIDERAR NOSSO PROJETO ATUAL,

PARA 


DECIDIR QUAL OPÇÃO ESCOLHER...















--> MANAGED SERVICES --> DEIXAM AS COISAS MAIS FÁCEIS PARA NÓS,




AÍ NÃO PRECISAMOS CONFIGURAR NOSSOS PRÓPRIOS SERVICES 


E SOFTWARE -> MENOS CONHECIMENTO NECESSÁRIO...














-> SE VC É UM LONGTERM ADMINISTRATOR E SABE TUDO DE SERVERS,

PODER 



CONTROLAR 

TUDO POR CONTA PRÓPRIA 


PODE VALER A PENA (caso de uso da EC2, por exemplo)...












NO PRÓXIMO MÓDULO,

VEREMOS O KUBERNETES...










--> É UMA COISA SUPER NOVA,



AINDA TEM RELAÇÃO COM DOCKER E CONTAINERS,



MAS 






INTRODUZ UMA COLEÇÃO DE CONCEPTS NOVOS, 
QUE VÃO NOS AJUDAR COM O DEPLOY 

DE CONTAINERS 




E 




COM O MANAGE DE 



APPLICATIONS MAIS COMPLEXAS,




APPS POSSIVELMENTE MULTI-CONTAINER,


RODANDO 

EM MÚLTIPLOS HOSTS...






