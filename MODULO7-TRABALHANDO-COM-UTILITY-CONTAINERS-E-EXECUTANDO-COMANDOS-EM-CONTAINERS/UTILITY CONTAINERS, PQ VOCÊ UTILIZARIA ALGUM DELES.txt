





PARA DEMONSTRAR O USO DOS UTILITY CONTAINERS,


O PROFESSOR CRIA 1 PROJECT VAZIO,







E AÍ 


ELE VAI QUERER 


CRIAR 1 'NODE APP'

DENTRO DESSE CONTAINER...















-> ATÉ AGORA,

O PROFESSOR SEMPRE NOS DEU UMA 'FINISHED NODE APPLICATION',


SEMPRE 


1 FILE ATTACHMENT...











-->  O PROBLEMA  É QUE 


'''PODEMOS CRIAR 1 DESSES APPS __ SEM _ tER O NODE __ INSTALADO __ 
NA NOSSA MÁQUINA'' ---> ISSO PQ 
PRECISAMOS 




de um arquivo 'package.json'


QUE 

CONTENHA 



A LISTA DE DEPENDENCIES 

QUE 

NOSSO APP REQUER...











--> TIPO ASSIM:





'{
    "dependencies": {}
}
'















-> OK... ENTRETANTO, TIPICAMENTE VC CRIA NOVOS PROJETOS 



NODE __ POR MEIO DA ESCRITA DE 

'npm init'...










--> ISSO VAI TE MOSTRAR ALGUMAS PERGUNTAS,
E AÍ VAI 
CRIAR 

1 ARQUIVO PACKAGE.json






COM 





ALGUNS DEFAULTS JÁ PREENCHIDOS...












--> MAS O PROBLEMA 



RELATIVO A ISSO É QUE 
 


 'npm'


 NÃO É UM COMANDO QUE 

 FICA DISPONÍVEL NA SUA MÁQUINA OUT OF THE BOX...















 --> PARA QUE VC CONSIGA USAR O 'NPM',

 VC 

 PRECISA TER O 'NODE' INSTALADO...













 --> PARA ISSO, VC PRECISA VISITAR O 'NODEJS.ORG'

 E BAIXAR O NODE E O INSTALAR...











 --> MAS A IDEIA DO DOCKER É JUSTAMENTE 



 _ __ 'NÃO PRECISAR INSTALAR TOOLS GLOBALMENTE NA NOSSA LOCAL MACHINE',



 TUDO POR MEIO DOS CONTAINERS, QUE JÁ CONTERÃO 'AS TOOLS QUE NOS SÃO NECESSÁRIAS'...









 AINDA ASSIM,

 PARA SETTAR 1 APP NO PRIMEIRO LUGAR,


 NÓS BASICAMENTE PRECISAMOS INSTALAR O NODEJS 


 PARA CONSEGUIR RODAR ESSE COMANDO DE 

 'npm init',







 A NÃO SER QUE QUEIRAMOS DESEJAR 


 ESSE 


 ARQUIVO DE 'package.json'



À MÃO...
















--> E VC PODE ESTAR PENSANDO ''MAS ISSO É ALGO SÓ DO NODEJS''....

 













 -> MAS NÃO É EXCLUSIVO AO NODE --> SE VC COMEÇAR A TRABALHAR COM O PHP E FRAMEWORKS 

 COMO O LARAVEL,



 VC VAI PRECISAR 


 DE 

 1 SETUP AINDA MAIS COMPLEXO NO SEU SISTEMA,


 E VAI PRECISAR 



 SETTAR AINDA MAIS TOOLS PARA FAZER 'LEVERAGE' 


 DE SUA 

 LARAVEL APPLICATION...











 --> OU SEJA,

 1 MONTE DE PROJECTS E 1 MONTE DE PROGRAMMING LANGUAGES PRECISAM 

 DE ALGUMAS EXTRA TOOLS 



 INSTALADAS NO SEU SISTEMA,
 PARA CRIAR 




 SEUS PROJETOS...














 --> E, SIM, VC PODE COLOCAR OS SEUS PROJETOS EM 1 CONTAINER MAIS TARDE,






 MAS A __ CRIAÇÃO INICIAL AINDA _ eXIGE QUE __ SUAS FERRAMENTAS ESTEJAM 

 INSTALADAS NO SEU SISTEMA...











 --> É POR ISSO QUE AGORA DEVEMOS ESTUDAR OS 'UTILITY CONTAINERS',

 E AÍ 

 EXPLORAR AS COISAS QUE PODEMOS FAZER __ COM O DOCKER, ALÉM DO 




 'RUN SOME APPLICATION'...