ANTERIORMENTE ESTUDAMOS O OBJECT 'POD'...




















AGORA ESTUDAREMOS O OBJECT 'deployment'


















--> ISSO PQ O 'DEPLOYMENT' OBJECT SERÁ 1 DOS KEY __ OBJECTS__ COM OS QUAIS VC TRABALHARÁ,

QUANDO VC MEXER COM O KUBERNETES...










-_> ISSO PQ, TIPICAMENTE,

VC 

NÃO CRIARÁ 

OS POD OBJECTS 



POR CONTA PRÓPRIA (pq teria de CRIAR OS POD OBJECTS, E ENTÃO MANUALMENTE OS INSERIR EM 1 WORKER NODE)...













--> O QUE VC FARÁ, GERALMENTE,

É CRIAR 

1 'DEPLOYMENT OBJECT',




EM QUE 


VC ESCREVERÁ AS INSTRUCTIONS 


ACERCA DO:




1) NÚMERO DE PODS QUE VC QUER QUE ELE CRIE E MANAGEIE PARA VOCÊ...




















-> O DEPLOYMENT OBJECT É CAPAZ DE CONTROLAR 1 OU MAIS PODS...











--> E A FILOSOFIA CORE POR TRÁS DESSE DEPLOYMENT OBJECT,

QUE, UNDER THE HOOD,

É UM ''''CONTROLLER OBJECT''''',






A IDEIA POR TRÁS DELE,


É QUE 



DESIGNAMOS UM 'TARGET STATE ESPERADO'...















1) SETTAMOS 1 'DESIRED STATE',

E AÍ O __ KUBERNETES MUDA O 'ACTUAL STATE' DO SEU APP...









2) NESSE 'TARGET STATE',

PODEMOS DIZER 



'''QUEREMOS 2 PODS COM ESSE CONTAINER X UP AND RUNNING''' -> AÍ 

O KUBERNETES 


VAI 

FAZER TUDO  QUE FOR NECESSÁRIO  PARA CHEGAR A ESSE STATE...






-> COM ISSO, PODEMOS 'DEFINIR O QUE QUEREMOS',

E AÍ 


O 

KUBERNETES VAI 'CHEGAR LÁ'..






--> A VANTAGEM DISSO, NO CASO,

É QUE 


OS 


'POD OBJECTS' 



SÃO _ CRIADOS __ PELO _ KUBERNETES,






OS 'PODS' SÃO CRIADOS PELO KUBERENTES... E O KUBERNETES 


VAI ENTÃO, POR EXEMPLO,


TAMBÉM 


COLOCAR 


ESSES PODS EM WORKER NODES COM MEMÓRIA/CPU SUFICIENTE,




TUDO PARA QUE NÃO TENHAMOS QUE MANUALMENTE 'PICK A REMOTE MACHINE'


E COLOCAR 1 POD NELA,



PQ TUDO ISSO SERÁ FEITO PELO KUBERNETES..














3) A OUTRA VANTAGEM 

DE USAR ESSE 'DEPLOYMENT OBJECT'
É QUE 

PODEMOS 

TAMBÉM 


'PAUSE'

E 

'DELETE' DEPLOYMENTS,




E TAMBÉM FAZER 'ROLLBACK' DE ALGUMA DEPLOYMENT...












--> ISSO SIGNIFICA QUE, SE HOUVE ALGO ERRADO COM ALGUM DE NOSSOS DEPLOYMENTS,

NÃO PRECISAMOS 'RUSH' PARA FIXAR NOSSO ERROR 


E 


ENTÃO SUBSTITUIR 1 POD ERRADO/FAILING COM 1 POD CERTO...   --> EM VEZ DISSO,



PODEMOS APENAS FAZER 'ROLLBACK' DO FAILING DEPLOYMENT E VOLTAR 


PARA 



O 

DEPLOYMENT ANTERIOR, QUE ESTAVA FUNCIONANDO ---------> COM ISSO,



PODEMOS 'FIX THE BUG SEM PRESSA',



E AÍ 


PODEMOS



COMEÇAR 1 NOVO DEPLOYMENT, COM A UPDATED CONTAINER IMAGE,

ASSIM QUE 

TIVERMOS ACABADO ----------> FEATURE SENSACIONAL...











4) OUTRA FEATURE É QUE 


'DEPLOYMENTS PODEM SER ESCALADOS DINAMICAMENTE E AUTOMATICAMENTE'












--> PODEMOS DIZER AO KUBERNETES QUE 'AGORA QUEREMOS TER MAIS OU MENOS PODS',


E PODEMOS TAMBÉM USAR 1 FEATURE CHAMADA DE 'AUTO-SCALING',


EM QUE 


__ AO SETTARMOS CERTAS METRICS (

como INCOMING TRAFFIC,

CPU UTILIZATION

),


 

 DEFINIMOS QUE QUANDO ESSAS METRICS FOREM EXCEDIDAS,

 O 


 KUBERNETES TERÁ 


 PERMISSÃO PARA 'CREATE MORE PODS',



 MAIS RUNNING CONTAINER INSTANCES,


 QUE ESTARÃO 


 LÁ 



 PARA 'HANDLE THE INCOMING REQUESTS' -------> E, ASSIM QUE 

 O
  

  TRAFFIC 'GOES DOWN',

  E SE TORNAR MENOR,



  OS PODS DESNECESSÁRIOS SERÃO REMOVIDOS...












  --> E ESSAS SÃO TODAS AS FEATURES QUE GANHAMOS, QUANDO USAMOS ESSE 

  OBJECT 'DEPLOYMENT'...












  --> BEM, QUANDO CRIAMOS DEPLOYMENTS,

  FAZEMOS 



  MANAGE DE 1 TIPO POD COM 1 DEPLOYMENT (EX: UM POD COM 2 CONTAINERS ESPECÍFICOS... 
  MÚLTIPLAS INSTÂNCIAS DESSE POD SÃO POSSÍVEIS, COM ESSE 
  DEPLOYMENT) ------> MAS É CLARO QUE 


  podemos CRIAR MÚLTIPLOS DEPLOYMENTS,


  PARA TERMOS 

  MÚLTIPLOS PODS SENDO MANAGEADOS PELO KUBERNETES...












--> É POR ISSO QUE 

TIPICAMENTE NÃO CRIAMOS PODS DIRETAMENTE,


E 
NÃO FAZEMOS MANAGE DELES DIRETAMENTE --> EM VEZ DISSO,


NÓS USAMOS 


OS OBJECTS DE 'DEPLOYMENT',
 


 E AÍ DEIXAMOS O KUBERNETES FAZER ISSO, ESSE MANAGE....











 --> NÓS CRIAMOS OBJECTS 'DEPLOYMENT',

 E AÍ ENVIAMOS ESSES OBJECTS AO CLUSTER KUBERNETES....













 --> USAMOS DEPLOYMENTS JUSTAMNETE PARA _ SETTAR O 'DESIRED END STATE'

 DE NOSSO APP....