







ANTES DE SUJARMOS AS MÃOS COM O KUBERNETES,

O PROFESSOR QUER ESCLARECER 1 COISA MT IMPORTANTE...


















--> É O SPLIT ENTRE O TRABALHO QUE VC, COMO DEV E ADMINISTRADOR,

TERÁ DE FAZER,






E O TRABALHO QUE O __ KUBERNETES FARÁ PARA VOCê...













--> PQ EXISTE 1 DIFERENÇA IMPORTANTE ENTRE O QUE O KUBERNETES E O QUE VC FAZ...















A COISA MAIS IMPORTANTE QUE VC PRECISA FAZER, QUE O KUBERNETES NÃO FARÁ,


É 

A 

'CLUSTER AND __ NODE _ INSTANCE CREATION'...


















--> VC PODE ESPERAR QUE O KUBERNETES É ESSA 'ALL-IN-ONE TOOL',




UMA TOOL EM QUE VC DEFINE A 'ESTRUTURA FINAL',




EM QUE VC DEFINE SEU CLUSTER,




E SEU MASTER NODE,


E SUA 


WORKER NODE CONFIGURATIONS,


E AÍ 

O 


KUBERNETES 

JÁ VAI LÁ E CRIA TUDO PARA VOCÊ...
















--> MAS NÃO É ISSO QUE O KUBERNETES FAZ...










-> O PROFESSOR JÁ MENCIONOU ISSO NO ÚLTIMO MÓDULO:



O KUBERNETES __ TE AJUDA COM O MANAGE DE PODS,


COM O MONITOR DE PODS,



MONITOR DOS CONTAINERS  NOS PODS,

O REPLACE DE PODS,


E O SCALING DE PODS... -------------> É TUDO SOBRE O 'ORCHESTRATING' DESSES CONTAINERS,
 DENTRO DOS PODS,



E O MOVE AROUND 

DESSES PODS AO LONGO DOS WORKER NODES,




E 


SOBRE A GARANTIA DE QUE TUDO 


FICARÁ 'UP AND RUNNING'



E __ REACHABLE AOS SEUS USERS... -> É ISSO QUE O KUBERNETES FAZ...
















EM OUTRAS PALAVRAS,


O KUBERNETES É RESPONSÁVEL PELO 








________MANAGE_ dE SUA DEPLOYED APPLICATION___...





ISSO QUER DIZER QUE ELE GARANTE QUE SEU APP 


RODARÁ 

DA MANEIRA QUE 

DEVERÁ 

RODAR... QUE SEUS CONTAINERS VÃO RODAR,

E TUDO RELACIONADO A ISSO...











O QUE O KUBERNETES NÃO FARÁ É O SETUP DA __ INFRASTRUCTURE 


DE SEU APP ---------> PQ __ O KUBERNETES 


NÃO SABE NADA SOBRE ISSO,




E NÃO 

É UMA 


TOOL DE 

'CLOUD INFRASCTRUCTURE CREATION TOOL',


OU QUALQUER COISA DO GÊNERO...

















-> O KUBERNETES NÃO É UM CLOUD SERVICE PROVIDER,


NEM 

1 

SERVICE POR 1 CLOUD SERVICE PROVIDER....













--> EM VEZ DISSO,

O KUBERNETES É UM FRAMEWORK 


E UMA COLLECTION DE CONCEPTS E TOOLS QUE 


TE PERMITEM 


SETTAR DEPLOYMENTS PARA 

SEUS CONTAINERIZED APPS...
















-> PORTANTO, O KUBERNETES NÃO SABE NADA SOBRE AS CONCRETE 

VIRTUAL MACHINES/COMPUTERS 

COM AS QUAIS VC 


VAI TRABALHAR...












ELE NÃO AS CONHECE ->  É POR ISSO QUE VC, COMO DEV,

DEVE 

CRIAR 

ESSAS MACHINES 

ANTECIPADAMENTE,

E AÍ 


INSTALAR:



1) O KUBERNETES API SERVICE 









2) OS KUBELETS 









3) TODOS OS SERVICES QUE O PROFESSOR MENCIONOU NO ÚLTIMO MÓDULO...










--> E VC TERÁ QUE INSTALAR TUDO ISSO NESSES MASTER E WORKER NODES,

QUE 
VC 

TERÁ 

DE CRIAR...










--> OU SEJA,

VC 

VAI TER QUE FAZER TODA ESSA INSTANCE CREATION,


INSTANCE MANAGEMENT 



E A INSTALLATION DE TODO ESSE SOFTWARE...
















E SE VC ESTÁ CUIDANDO DE SEU PRÓPRIO DATA CENTER,


ISSO SIGNIFICA QUE 

VC 
PRECISA 


MANAGEAR TODO SEU DATA CENTER,


E AÍ 


__PREPARAR _ TUDO ALI PARA O KUBERNETES...












SE VC ESTÁ USANDO 1 CLOUD PROVIDER,


ISSO __ SIGNIFICA QUE 

VC 


VAI PRECISAR CRIAR, POR EXEMPLO COM O AWS EC2,

TODAS AS 



INSTANCES 

__ QUE VC PRECISA 


PARA OS WORKER E MASTER NODES.... 












--> VC TALVEZ TAMBÉM PRECISE CRIAR RESOURCES ADICIONAIS,

COMO 


1 LOAD BALANCER OU FILE SYSTEMS (elastic file system da aws, por exemplo),



SE SEU APP PRECISAR DISSO...

















--> OK... ISSO NOS TRAZ  DE VOLTA à PARTE DO 'MANUAL DEPLOYMENT',




QUE 


É __ EXATAMENTE O QUE _ NÃO QUERÍAMOS FAZER... -->  pq, com o manual deployment,


enfrentamos várias 

desvantagens ----------> TEREMOS DE  MANTER ESSAS MACHINES UPDATED,



TEREMOS DE MANTER O OPERATING SYSTEM UPDATADO,

E AÍ 

MANAGEAR 

TODAS AS COISAS 




DE 

'NETWORK SECURITY GROUP' ---------> ISSO SIGNIFICA QUE 

PRECISAMOS GARANTIR A SEGURANÇA 






DESSAS INSTANCES, E DE TODAS ESSAS MACHINES....


















--> ADICIONALMENTE, CONFORME O PROFESSOR FALOU NO ÚLTIMO MODULE,








TALVEZ __ ENFRENTEMOS AINDA MAIS PROBLEMS,



PROBLEMS A RESPEITO 

DO FAILURE DE CONTAINERS, REPLACEMENT DE CONTAINERS, 

ADD DE MAIOR NÚMERO DE CONTAINERS, A PARTIR DE TRAFFIC SPIKES, 

BALANCEAMENTO DE TRÁFEGO AO LONGO DE MÚLTIPLOS CONTAINERS, ETC...
















--> OK... MAS ESSES PROBLEMAS AÍ,


OS DE CIMA,






__ O KUBERNETES JÁ NOS AJUDA COM ELES... -->  (

    DO FAILURE DE CONTAINERS, REPLACEMENT DE CONTAINERS, 

ADD DE MAIOR NÚMERO DE CONTAINERS, A PARTIR DE TRAFFIC SPIKES, 

BALANCEAMENTO DE TRÁFEGO AO LONGO DE MÚLTIPLOS CONTAINERS, ETC...









)












mas quando o assunto é security,

 



 _ E O MANAGE DESSAS MACHINES, DESSAS INSTANCES, 





 MANAGE DO OPERATING SYSTEM NO INTERIOR DAS MAQUINAS,

 E O 


 'KEEP EVERYTHING UP-TO-DATE',






 ISSO É ALGO COM QUE O  KUBERNETES NÃO CONSEGUE TE AJUDAR -> PQ 


 NÃO É UM 


 SERVER ADMINISTRATION TOOL, 


 NÃO É 1 CLOUD PROVIDER,


 E NÃO É UM MANAGED SERVICE QUE 

 TIRARIA ISSO DAS SUAS MÃOS...
















 ---> A ÚNICA COISA QUE O KUBERNETES FAZ, PORTANTO,

 É TE AJUDAR COM 'O QUE ACONTECE' NESSES SERVERS...












 --> ISSO QUER DIZER QUE O KUBERNETES VAI:







 1) TE AJUDAR A CRIAR OS OBJECTS (COMO 'pods')


 E FARÁ O RUN DOS CONTAINERS NOS PODS (manage them)...










 2) VAI TAMBÉM __ MONITORAR E REPLACE SEUS PODS,
E TAMBÉM 

VAI ATE AJUDAR COM O SCALING 
DO SEU APP....












3) BASICAMENTE, O KUBERNETES VAI USAR OS RESOURCES QUE VC CRIOU,


OS WORKER E MASTER NODES,

E AÍ 


VAI 

TE AJUDAR 

__A ACHIEVE 

OS 

SEUS 

DEPLOYMENT GOALS 

PARA 



ESSES CONTAINERS... 













--> MAS O KUBERNETES NÃO VAI CRIAR OS RESOURCES PARA VOCÊ... ISSO É ALGO QUE VC



MESMO TEM DE FAZER...



















--> CERTO... MAS SE VC É UM EXPERIENCED SERVER ADMIN,


VC 


PODE FAZER TUDO ISSO.... -------> SE VC NÃO É UM DESSES SERVER ADMINS EXPERIENTES,

VC PODE 


USAR TOOLS ADICIONAIS,



COMO O 

'KUBERMATIC',









QUE É UMA TOOL 
FEITA PARA O KUBERNETES,

QUE PODE TE 

AJUDAR 


A 

CRIAR 


TODA A INFRASTRUCTURE QUE VC PRECISA PARA 

FAZER SEU 'KUBERNETES-MANAGED DEPLOYMENt'....










O KUBERMATIC PODE SER 1 TOOL ADICIONAL PARA TE AJUDAR A CRIAR 


ESSAS REMOTE MACHINES, ESSAS INSTANCES,


EM COISAS COMO A AWS...











O KUBERMATIC É UMA TOOL QUE TE AJUDA A FAZER ISSO, SE VC NÃO QUISER FAZER TUDO MANUALMENTE... 















--> MAS O KUBERMATIC NÃO FAZ PARTE DO KUBERNETES EM SI,


PQ 
O 

KUBERNETES 


É REALLY JUST 




1 
TOOL 
PARA FAZER MANAGE DESSES CONTAINERS,


E PARA __ 'KEEP YOUR APP UP AND RUNNING',


e para FAZER O SCALE DO SEU APP...











ALÉM DISSO, CERTOS 


CLOUD PROVIDERS,









COMO O AWS,


POSSUEM 




SERVICES DEDICADOS,








COMO O 'EKS' (elastic kubernetes service) 


QUE TE AJUDAM COM ISSO --> ESSES SERVICES 


TE DEIXAM 


'BRING YOUR OWN 

KUBERNETES CONFIGURATION',









PARA QUE __ VC N TENHA QUE USAR A 'AWS SPECIFIC CONFIGURATION' ( como fizemos com o ECS)...















AÍ O EKS VAI SETTAR TODOS OS RESOURCES NECESSÁRIOS PARA 



RODAR SUA KUBERNETES CONFIGURATION...

















--> OU SEJA,

SÃO TOOLS  COMO O 'EKS' 


E o 



'KUBERMATIC' 


QUE VÃO TE AJUDAR A 'COMPLETE THE PICTURE',


E QUE 


PODEM TE AJUDAR 

A SE 

LIVRAR 



COM A PARTE 


DE 

'CREATE MANUAL DAS INSTANCES'...












--> OK... O PROFESSOR SÓ 

DIZ TUDO ISSO PQ É FÁCIL IMAGINAR QUE O KUBERNETES 



CRIARÁ 

TODAS ESSAS MACHINES 


NECESSÁRIAS A VOCÊ,


E QUE 

VAI 




''INSTALAR OS KUBELETS,

O API SERVER,


E O SCHEDULER, E TODAS AS COISAS QUE 

COMENTAMOS ANTES''...












------> E É REALMENTE IMPORTANTE ENTENDER QUE O KUBERNETES NÃO FARÁ ISSO...









ELE NÃO VAI FAZER O CREATE DE QUAISQUER MACHINES OU VIRTUAL INSTANCES,








E ELE NÃO VAI INSTALAR SOFTWARE ALGUM... -> A ÚNICA COISA QUE 
ELE 

FARÁ 

É O MANAGE 




DESSES PODS, E DOS CONTAINERS LÁ DENTRO... -> VAI CUIDAR DO 



MONITORING DOS SEUS CONTAINERS... VAI CUIDAR DO SCALING,


VAI GARANTIR QUE 

SEUS CONTAINERS 




PODERÃO SER 'ACCESSED E REACHED'


PELAS COISAS CORRETAS,



E VAI 


'KEEP YOUR APP UP AND RUNNING'...










MAS PARA TER OS RESOURCES NECESSÁRIOS AO SEU APP,


OU VC VAI CRIAR ESSAS INSTANCES POR CONTA PRÓPRIA,



OU 






VAI USAR 1 TOOL COMO O KUBERMATIC... OU 1 MANAGED SERVICE,


COMO O 

'EKS'...














--> VEREMOS ESSE MANAGED SERVICE EM 
AÇÃO MAIS TARDE,


MAS O PROFESSOR SÓ QUERIA QUE SOUBÉSSEMOS DE ISSO TUDO...








--> POR ENQUANTO, O PROFESSOR DIZ QUE DEVEMOS SETTAR 1 

ENVIRONMENT 


KUBERNETES LOCALMENTE,

PARA TERMOS TODO O SOFTWARE NECESSÁRIO AO KUBERNETES NESSES RESOURCES,


LOCALMENTE...