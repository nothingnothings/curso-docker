






--> OK... AO LONGO DAS ÚLTIMAS AULAS,

APRENDEMOS QUE 


O 

DOCKER TEM ALGUMAS FEATURES LEGAIS 





ACERCA 


DOS 

'REQUESTS 

SAINDO DE 1 CONTAINER E INDO À LOCAL HOST MACHINE/WEB/OUTRO CONTAINER'...












--> ESPECIFICAMENTE,


APRENDEMOS:



1) PODEMOS USAR 'host.docker.internal' como 1 endereço, para TARGETTAR A LOCAL HOST MACHINE.... (se tivermos algo rodando lá)...



2) E, TAMBÉM,

APRENDEMOS SOBRE 'CONTAINER NETWORKS',


E QUE 
_ QUANDO OS UTILIZAMOS E TEMOS 2 CONTAINERS EM 1 MESMO NETWORK,


PODEMOS ACTUALLY USAR O __ NOME_ DE 1 CONTAINER COMO 'DOMAIN/ADDRESS',



E AÍ ___ 


O DOCKER   




FAZ AUTOMATICAMENTE O RESOLVE DOS IP ADDRESSES...















--> E ESSA FEATURE AÍ DE 'SUBSTITUIÇÃO DE KEY-WORD' POR 

IP ADDRESS É BEM LEGAL,







MAS O PROFESSOR QUER ESCLARECER ALGO:












_____ O DOCKER __ NÃO VAI COMEÇAR A SUBSTITUIR SEU SOURCE-CODE,

POR TRÁS DAS CENAS...








--> ELE NÃO FAZ ISSO,

NÃO 




__ FAZ '''READ YOUR SOURCE CODE,

SEE THE CONTAINER NAME AND THEN 

PLUG-IN THE 


IP ADDRESS OF THAT CONTAINER INTO YOUR CODE''' --> PQ ISSO SERIA MT COMPLEXO,







__ E NÃO É ISSO QUE ELE ESTÁ FAZENDO..












--> EM VEZ DISSO,


O DOCKER 'POSSUI'


O ENVIRONMENT EM QUE 


SEU 
APP RODA...













--> E SE SEU APP _ ENVIA 1 HTTP REQUEST, OU MONGODB REQUEST,


OU QUALQUER OUTRO TIPO DE REQUEST,




REQUEST QUE 'SAIA DO CONTAINER',



O DOCKER FICARÁ 




'AWARE' DISSO -----------> E É EXATAMENTE NESSE INTERVALO DE TEMPO 

_ QUE __ o


DOCKER É CAPAZ_  


DE ATUAR  




E __ FAZER__ 'RESOLVE'




DO __ ADDRESS/CONTAINER_NAME/HOST DOCKER INTERNAL



E___ SUBSTITUIR ISSO AÍ COM O ACTUAL IP ADDRESS,








JÁ QUE 


__ O DOCKER É 



REALMENTE AWARE DOS SURROUDING CONTAINERS,

E DA HOST MACHINE...















--> ISSO ACONTECE SÓ QUANDO 

O 
REQUEST DEIXA O CONTAINER --> SE O REQUEST NÃO DEIXA O CONTAINER,





__ OU __ SE __


1 REQUEST 
É 


'GENERATED SOMEWHERE ELSE' (



    como, por exemplo,



NO BROWSER --> se users estão 

visitando 

seu web app 


E O CÓDIGO JAVASCRIPT ESTÁ RODANDO 



NO BROWSER DELES,


E O 



REQUEST 

ESTÁ SAINDO DO BROWSER DELES,

AÍ O 


DOCKER __ NÃO VAI SUBSTITUIR O SOURCE CODE --> E ISSO É IMPORTANTE...

)












--> É IMPORTANTE ENTENDER ISSO, QUE ELE __ NÃO FAZ O 'REPLACE' DO SEU SOURCE CODE,

e sim 


apenas performa o resolve NO MOMENTO QUE 

SEUS 

REQUESTS DEIXAM OS CONTAINERS...