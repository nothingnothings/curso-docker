








AO CLICARMOS EM 'LAUNCH INSTANCE',

ISSO VAI ABRIR 1 WIZARD...












--> NESSE WIZARD, PODEREMOS CONFIGURAR ESSE CLOUD SERVER...








-_> VAMOS USAR A IMAGE DE 

'AMAZON LINUX 2 AMI'..






-_> 64-BIT X86...





pegue o 'FREE TIER ELIGIBLE'...










--> t2.micro...









-_> NESSA TELA,
 VC PODE ESCOLHER QUAL INSTANCE VC QUER LAUNCH...










 T2.MICRO --> NÃO É MT FORTE, MAS É DE GRAÇA...












 CONFIGURE 'INSTANCE DETAILS'.. --> ASSEGURE QUE 1 NETWORK 'VPC' ESTÁ ESCOLHIDA...








 A VPC ESTÁ COMO A DEFAULT...











 ISSO FEITO, ENTRAREMOS NO MODAL DE 'SEGURANÇA'.... 

















 -> É UMA TELA IMPORTANTE --> AQUI, PODEMOS CRIAR 1 NOVO 'KEY-PAIR'










 PRECISAREMOS DESSE KEY-PAIR (que, no final das contas, é um arquivo) 






 PARA __ MAIS _ TARDE__ NOS CONECTARMOS A NOSSA INSTANCE,


 POR MEIO DE 'SSH',



 E AÍ 

 RODAR 



 COMANDOS NELE..










 --> 'CREATE A NEW KEY PAIR' --> aí dê um nome --> 'example-1'....










 -->AÍ COLOQUE 'download key pair'...











 --> SE VC PERDER SUA KEY, VC SERÁ FORÇADO A FECHAR ESSA INSTANCE E CRIAR UMA NOVA,


PQ VC NÃO VAI MAIS FICAR CAPAZ DE SE CONECTAR AO 



SEU PROJETO...











NÃO COMPARTILHE ESSE FILE COM NINGUÉM, PQ QUALQUER PESSOA  SERÁ CAPAZ DE SE CONECTAR A SUA INSTANCE,

COM ESSA KEY...














--> ok... SUA INSTANCE RODARÁ,




SUA INSTANCE TERÁ SIDO LANÇADA... --->








'VIEW INSTANCES'..










---> AÍ NOSSA INSTANCE ESTARÁ 'UP AND RUNNING'...









--> com a instance rodando, podemos nos conectar via SSH...










SSH --> SECURE SHELL --> É UM PROTOCOL __ PARA 


SE CONECTAR A UMA REMOTE MACHINE,


POR MEIO 

DO COMMAND LINE/TERMINAL QUE 

VC 
TEM 

NA SUA REMOTE MACHINE...
















NO LINUX/MAC OS,



ISSO É SUPER SIMPLES,




PQ __ LÁ VC JÁ VAI CONSEGUIR USAR O 

TERMINAL NORMAL,



E AÍ 

VC 

VAI PODER USAR O COMANDO 'ssh' 








PARA ESTABELECER UMA CONEXÃO SSH A UM SERVER..














-> NO WINDOWS,

ISSO 

NÃO É BUILT-IN..









VC PRECISA OU SETTAR O 'WSL',



QUE É O 'LINUX RODANDO NA SUA WINDOWS MACHINE'





OU ENTÃO __ USAR __ 1 TOOL COMO 'putty',










QUE É UMA TOOL, UM SSH CLIENT,

QUE VAI RODAR 
ESSES 


COMANDOS SSH PARA VOCÊ....













-> ok, eu já tenho o 'WSL2'... -> COM TODAS ESSAS PREPARAÇÕES FEITAS,



E ASSEGURADO O WRITE DE SSH COMMANDS,



PODEMOS NOS CONECTAR A NOSSA INSTANCE...










--> TEMOS AQUELAS 3 OPTIONS, CLÁSSICAS:


1) A STANDALONE SSH CLIENT (AINDA NÃO USEI)






2) SESSION MANAGER (NUNCA USEI)





3) EC2 INSTANCE CONNECT (ABRIR NO BROWSER, BROWSER-BASED SSH CONNECTION)...

















--> ok... aí temos as etapas detalhadas para nos conectarmos a nossa instance 
rodada na cloud,


a nossa local machine...







E ISSO SERÁ NECESSÁRIO, 




DE ACORDO COM NOSSAS ETAPAS:







1) CREATE AND LAUNCH EC2 INSTANCE, VPC AND SECURITY GROUP 








2) CONFIGURE SECURITY GROUP TO EXPOSE ALL REQUIRED PORTS 

TO WWW 







3) CONNECT TO INSTANCE (SSH), INSTALL DOCKER AND RUN _ CONTAINER....















-> CERTO...












MAS O PROFESSOR PULOU 1 ETAPA..









'''CONFIGURE SECURITY GROUPS'''











--> certo... essa é uma etapa 

que podemos fazer, sim,




MAS O  PROFESSOR DIZ QUE PODEMOS FAZER __ ISSO _ DEPOIS __ 


DE STARTARMOS NOSSO DOCKER CONTAINER NA NOSSA 


INSTANCE...














--> DEVEMOS CONTINUAR 




COM O SETUP DO SSH...














--> ABRA PUTTY, OU O 'wsl2 bash' 

no windows... ou o seu terminal regular, no mac os ou linux...

















--> certo... 






ESTAMOS NO NOSSO PROJECT FOLDER, EM QUE TEMOS O ARQUIVO de 'example-1.pem'...








--> OK... COLOCO ESSA KEY (.pem) 


NO GITIGNORE E NO DOCKERIGNORE...

















--> OK... ISSO FEITO,


O PROFESSOR NOS EXPLICA QUE DEVEMOS 

RODAR O COMANDO 



'chmod 400 example-1.pem'...








DEVEMOS FAZER ISSO PARA GARANTIR QUE ESSA KEY-FILE PODERÁ SER USADA...


















--> OK... 









ESSE COMANDO, O CHMOD,




FICA DISPONÍVEL APENAS NO BASH/TERMINAL DO LINUX...












------> CERTO... FEITA ESSA DEFINIÇÃO DE PERMISSÃO DO ARQUIVO 'example-1.pem',









--> CERTO.... 



colocamos esse comando, e aí o executamos,

para 

garantir que 

essa key-file terá 



as permissões corretas, para continuarmos...












--> A PRÓXIMA ETAPA 



É 








RODAR O COMANDO 




ssh -i "example-1.pem" ec2....





-i identity_file
             Selects a file from which the identity (private key) for
             public key authentication is read.  The default is
             ~/.ssh/id_dsa, ~/.ssh/id_ecdsa, ~/.ssh/id_ecdsa_sk,
             ~/.ssh/id_ed25519, ~/.ssh/id_ed25519_sk and ~/.ssh/id_rsa.
             Identity files may also be specified on a per-host basis in
             the configuration file.  It is possible to have multiple -i
             options (and multiple identities specified in configuration
             files).  If no certificates have been explicitly specified
             by the CertificateFile directive, ssh will also try to load
             certificate information from the filename obtained by
             appending -cert.pub to identity filenames.





ex:

ssh -i "example-1.pem" ec2-user@ec2-18-118-1-211.us-east-2.compute.amazonaws.com















OK... TEREI ME CONECTADO 




À INSTANCE AWS NO TERMINAL, ESSENCIALMENTE...















--> VEJA:




$ ssh -i "example-1.pem" ec2-user@ec2-18-118-1-211.us-east-2.compute.amazonaws.com
The authenticity of host 'ec2-18-118-1-211.us-east-2.compute.amazonaws.com (18.118.1.211)' can't be established.
ED25519 key fingerprint is SHA256:jfdeXYvo0obUEbdfjc1eRQWur+TBWq2gU7JU5aVIkDI.
This key is not known by any other names
Are you sure you want to continue connecting (yes/no/[fingerprint])? y
Please type 'yes', 'no' or the fingerprint: yes
Warning: Permanently added 'ec2-18-118-1-211.us-east-2.compute.amazonaws.com' (ED25519) to the list of known hosts.

       __|  __|_  )
       _|  (     /   Amazon Linux 2 AMI
      ___|\___|___|

https://aws.amazon.com/amazon-linux-2/
4 package(s) needed for security, out of 14 available
Run "sudo yum update" to apply all updates.
[ec2-user@ip-172-31-2-109 ~]$ 







-----------------------------------














ESTOU CONECTADO...











--> 'ec2-user@ip-172.31.2.109' ----> ESTAREMOS CONECTADOS 


PQ 


ELE ESTÁ 

DIZENDO VÁRIAS COISAS ALI, DO IP ADDRESS (MÁQUINA) 

E 'ec2-user' (user da aws ec2)...











AGORA TODOS OS COMANDOS QUE VC RODAR NO TERMINAL SERÃO EXECUTADOS 



NA REMOTE MACHINE...













--> AGORA PRECISAMOS:





1) INSTALAR O DOCKER 









2) DE ALGUMA FORMA __ FAZER NOSSA IMAGE, CONSTRUÍDA LOCALMENTE,



CHEGAR NAQUELA REMOTE MACHINE...













3) DEPOIS DISSO, PRECISAMOS RODAR O CONTAINER








4) DEPOIS DISSO, PRECISAMOS CONFIGURAR OS SECURITY GROUPS...












veremos essas etapas agora...