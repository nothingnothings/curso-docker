









OK... O PROFESSOR USOU ESTE COMANDO PARA RODAR O CONTAINER LOCALMENTE:










docker run --rm -d -p 80:80 node-app-aws 













--> O QUE PERCEBEMOS É QUE _ O PROFESSOR NÃO ESTÁ USANDO 

VOLUME ALGUM... NA VERDADE,

NEM VOLUMES,


NEM BIND MOUNTS....










--> MAS PQ ISSO?









É PQ __ EXISTE 1 DIFERENÇA ENTRE RODAR 1 CONTAINER EM DEV MODE 


E 


PRODUCTION MODE...




















--> QUANDO ESTAMOS EM DEV MODE,


O CONTAINER DEVE 'ENCAPSULAR O RUNTIME ENVIRONMENT',



MAS __ NÃO DEVE ENCAPSULAR NECESSARIAMENTE O CÓDIGO EM SI... 










OU SEJA, QUEREMOS GARANTIR TODAS AS TOOLS PARA RODAR O APP,

EM DEV MODE,




MAS __ O CÓDIGO DO APP,
 
 DURANTE O DEVELOPMENT,





 FICAMOS 'FINE'

 SE 

 ESSE CÓDIGO 




 _VEM DO LADO __ DE FORA DO CONTAINER (vem de nossa local file system),


 E SE O CONTAINER É CAPAZ DE 

 'PICK UP THE LATEST CODE' SEM 

 PRECISAR REBUILDAR E RE-RODAR O CONTAINER,


ISSO É BEM MELHOR PARA NÓS...

















- OK... MAS NO MOMENTO EM QUE PEGAMOS 






NOSSO CONTAINER E COLOCAMOS EM 





1 REMOTE MACHINE,


A IDEIA É DIFERENTE:







O __ CONTAINER 'SHOULD REALLY WORK STANDALONE',



E VC 



NÃO DEVE TER NENHUM CÓDIGO-FONTE NA SUA REMOTE MACHINE...














---> O CONTAINER RODANDO NA MÁQUINA REMOTA 


DEVERÁ SER 


''''THE SINGLE SOURCE OF TRUTH'''.... -->  ISSO QUER DIZER QUE 



PODEMOS __ CONFIAR__ 


NO FATO DE QUE 


'''AO UPLOADARMOS ESSA IMAGE E RODARMOS EM 1 MÁQUINA,


TEREMOS TUDO QUE É NECESSÁRIO PARA ESSA MÁQUINA'''....














NÓS TAMBEM NÃO VAMOS PRECISAR MOVER NOSSO SOURCE-CODE PARA 


1 



'SEPARATE FOLDER', NA HOSTING MACHINE .... -> ISSO PQ _ QUEREMOS TER 



TUDO NECESSÁRIO __ DENTRO __ DO CONTAINER... --_> NADA DEVE EXISTIR 



AO REDOR DAQUELE 



CONTAINER,
 

 NO FILE SYSTEM DA HOSTING MACHINE...
















--> É EXATAMENTE POR ISSO QUE,

QUANDO BUILDAMOS PARA PRODUCTION,

USAMOS 



'COPY' 



EM VEZ DE BIND MOUNTS...















------>OK... ISSO QUER DIZER QUE COPIAMOS NOSSO SOURCE 

CODE PARA A IAMGE, QUANDO BUILDAMOS A IMAGE...












COMO VISTO NESTE CÓDIGO:









FROM node:14-alpine

WORKDIR /app

COPY package.json .

RUN npm install 

COPY . . ---> ISTO.

EXPOSE 80 

CMD ["node", "app.js"]
















TERÁ TODAS AS COISAS NECESSÁRIAS PARA RODAR O APP...












--> OK... QUEREMOS USAR O COPY PARA PRODUCTION..








É ISSO QUE QUEREMOS USAR, AGORA..










--> TAMBÉM VALE A PENA RESSALTAR QUE 

TEMOS 'COPY', AQUI,




E __ MESMO __ DURANTE_ O DEVELOPMENT, 




__ PODERÍAMOS RODAR ESSE CONTAINER E __ MESMO ASSIM 


PROVIDENCIAR 



1 BIND MOUNT... --> ISSO PQ 



OS BIND MOUNTS NÃO SÃO ALGO QUE 


COLOCAMOS NA DOCKERFILE EM SI,


E SIM 


COLOCAMOS NOS COMANDOS DE 'DOCKER RUN' ( ou 

no docker-compose),



e é _ JUSTAMENTE POR ESSA RAZÃO 



QUE 



ESCREVEMOS OS BIND MOUNTS 



NOS RUNS DO DOCKER, E NÃO NA DOCKERFILE EM SI... --> COM ISSO,

CONSEGUIMOS DIFERENCIAR 




ENTRE 'DEVELOPMENT' E 'PRODUCTION'




__ POR MEIO DE 1 SIMPLES __ 


COMANDO DOCKER RUN DIFERENTE... -> NÃO PRECISAMOS ENCODAR 

NADA 




NA DOCKERFILE,




E É POR ISSO QUE PODEMOS USAR 1 ÚNICA 

DOCKERFILE PARA 

PRODUCTION E DEVELOPMENT...











-- PODEMOS TRABALHAR COM A MESMA IMAGE,

E AINDA ASSIM TER MAIOR FLEXIBILIDADE DURANTE O DEVELOPMENT...













-> OK.... É CLARO QUE, SE TIVERMOS 1 ARQUIVO 'DOCKER-COMPOSE',

podemos ter 1 bind-mount escrito dentro dele... --> mas o professor vai 

explicar 



como 
PODEMOS IMPEDIR OS BIND-MOUNTS 


EM PRODUCTION,

NO DOCKER-COMPOSE,


MAIS TARDE, COM 



1 PROJETO MULTI-CONTAINER... 












--> POR ENQUANTO, É TUDO 'ALL ABOUT' 1 CONTAINER E 1 IMAGE,

E O 

COPY É O NOSSO AMIGO,
PARA 



GARANTIR QUE TEREMOS 


'1 REPRODUCIBLE CODE AND ENVIRONMENT SNAPSHOT'

DENTRO 



DA  IMAGE -> ISSO GARANTE QUE 





TODA IMAGE VAI RODAR SEM NENHUM 'SURROUNDING CODE',





NÃO IMPORTANDO O LOCAL EM QUE VC VAI RODAR ESSE CONTAINER... E ISSO É SUPER IMPORTANTE...