








UMA NOTE SOBRE DATABASES...


















--> O PROFESSOR QUER FALAR SOBRE O USO DE DATABASES COM O DOCKER,

E 


O 

DEPLOY 


DE 

DATABASES COM O DOCKER...














VC PODE, ABSOLUTAMENTE,



MANAGEAR SEUS PRÓPRIOS CONTAINERS 'DATABASE',


COMO 



FIZEMOS ATÉ AGORA...

















--> PQ, NO MOMENTO,

ESTAMOS 






COM AQUELE MONGODB CONTAINER UP AND RUNNING --> CONFORME APRENDEMOS,

ESSE CONTAINER, INTERNAMENTE,

CRIA 


1 
DATABASE,


STARTA ESSA DATABASE 

E ENTÃO 


NOS PERMITE 


ESTABELECER CONEXÃO 

A 

ESSA DATABASE,


POR MEIO DA PORT 


'27017'...










-> E ABSOLUTAMENTE PODEMOS USAR E FAZER RUN 

DE NOSSO PRÓPRIOS DATABASE CONTAINERS...












--> ENTRETANTO,

HÁ 1 PUNHADO DE POTENTIAL DOWNSIDES 


E ISSUES...













EXEMPLO:



'SCALING E MANAGING AVAILABILITY'   PODE SER DESAFIADOR...
















COMO ISSO É UMA DATABASE,

TEMOS QUE 


ESTAR PREPARADOS,

PRECISAMOS 


CONSIDERAR A POSSIBILIDADE DE 'MÚLTIPLAS READ/WRITE OPERATIONS ACONTECENDO AO MESMO TEMPO'... ----> 





OU SEJA,


TALVEZ SEJA NECESSÁRIO TERMOS 

MÚLTIPLOS CONTAINERS DE DATABASE,

COM 

A MESMA CONFIGURATION E _ TRABALHANDO COM AS MESMAS DATABASE FILES,


TODAS 

RODANDO SIMULTANEAMENTE -------> ISSO TRAZ 




NOVOS DESAFIOS,





PQ _ AÍ __ TEREMOS DE, É CLARO,




_ GARANTIR _ QUE _ ESSES DIFERENTES DATABASE CONTAINERS 



CONSIGAM 



'WORK ON ONE AND THE SAME DATABASE',




TUDO _ PARA __ QUE _ 

FIQUEM SINCRONIZADOS 'ACROSS EACH OTHER',



E PARA __ QUE __ 1 DATABASE __ NÃO 

FAÇA MANAGE 


DE 

1 PEDAÇO DE DATA QUE 


NÃO É CONHECIDO POR OUTRA DATABASE....















-> ISSO SIGNIFICA QUE 'SCALING DATABASE CONTAINERS'


SIGNIFICA MAIS DO QUE APENAS 'RODAR 2 CONTAINERS DATABASE IGUAIS, AO MESMO TEMPO'...












--> ADICIONALMENTE,

E 



RELACIONADO A ISSO,







PODERÍAMOS TER PROBLEMAS COM PERFORMANCE,

ESPECIALMENTE



DURANTE 'TRAFFIC SPIKES' --> ISSO PODERIA SER ESPECIALMENTE 

RUIM 

SE NÃO HANDLARMOS SCALING,


SE TIVERMOS APENAS 1 DATABASE CONTAINER QUE 



DEVERÁ FAZER TODO O TRABALHO...














--> OK... MAS ALÉM DE PROBLEMAS 
DE PERFORAMNCE,


TEMOS O PROBLEMA DE 

'BACKUPS AND SECURITY' --> EM OUTRAS PALAVRAS,


É CLARO QUE QUEREMOS GARANTIR QUE NOSSA DATA É SECURED E QUE NÃO PODE SER ACESSADA 


SEM NOSSA 


 
PERMISSÃO.. ->  TAMBÉM QUEREMOS QUE NOSSA DATA SEJA BACKED-UP 


REGULARMENTE,


TUDO PARA QUE 

CONSIGAMOS FAZER ROLL-BACK PARA UMA VERSÃO ANTERIOR,






PARA CASOS EM QUE NOSSA DATA FOR PERDIDA...













TODAS ESSAS SÃO 
CHALLENGES QUE PRECISAMOS ENFRENTAR,



SE ESTAMOS USANDO 1 DATABASE EM PRODUCTION...












LOCALMENTE, NA NOSSA MÁQUINA,

ESSAS COISAS NÃO IMPORTAM... MAS EM 

PRODUÇÃO, IMPORTAM...















-> É POR ISSO QUE, PARA DATABASES ESPECIFICAMENTE,

VC 

TALVEZ QUEIRA 

CONSIDERAR 




__ TROCAR DE 'MANAGE YOUR OWN DATABASES AND DATABASE CONTAINERS',







PARA 1 'MANAGED DATABASE SERVICE'...















--> PARA RELATIONAL DATABASES, COMO MYSQL DATABASES,


HÁ 



O SERVIÇO 'RDS'


DA AWS... -_> É OUTRO SERVICE OFERECIDO PELA AWS... ------>









RDS --> RELATIONAL DATABASE SERVICE...











MONGDB --> OFERECE O 'MONGODB ATLAS'... ------> É UM SERVICE 

OFERECIDO PELA COMPANHIA MONGODB..











--> ISSO É ALGO QUE VC TVZ CONSIDERE,



SE VC ESTÁ CONSTRUINDO SEU PRÓPRIO APP --> É MELHOR,

TER 

ALGO MANAGED... MENOS RESPONSABILIDADE.....
















--> AÍ TEMOS O TRADE-OFF:








MAIS MANAGED VS MENOS MANAGED 



MENOS PERIGO, MAIS FÁCIL VS  MAIOR LIBERDADE, MAIS DIFÍCIL.......






















SE VC N FOR UM EXPERT EM MONGODB/MYSQL,





TALVEZ SEJA MELHOR 





USAR OU O RDS 
OU 

O 


MONGODB ATLAS...










---> A MANAGED SOLUTION DE SQL DATABASES, NA AWS,

É O 'RDS'...













PARA O MONGODB,

TEMOS O MONGODB.COM- -> O SITE DA COMPANHIA MONGODB --> PODEMOS APRENDER A 



LIDAR COM O MONGODB LOCALMENTE,
MAS 

TAMBÉM

PODEMOS USAR O MONGODB ATLAS,



QUE É 1 CLOUD-BASED MONGODB SERVICE QUE 

JÁ 




TAKES CARE 



DA SCALING, PERFORMANCE E BACKUPS PARA NÓS... -> DEIXA O USO DO MONGODB BEM MAIS FÁCIL...

















--> O MONGODB  POSSIVELMENTE USA DOCKER CONTAINERS, UNDER THE HOOD...








--> MAS USAR O MONGODB ATLAS PODE SER BEM MAIS  CONVENIENTE 



DO QUE _ USAR _1 IMAGE DO MONGODB...







->  MONGODB ADMINISTRATION EXPERT --> O PROFESSOR NÃO É...