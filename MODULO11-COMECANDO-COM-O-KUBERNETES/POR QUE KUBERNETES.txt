










-- OK... O PROFESSOR FALA:








'''SERVIÇOS COMO ECS, QUE USAMOS NO ÚLTIMO MÓDULO,


PODEM NOS AJUDAR COM ESSES PROBLEMAS'' 







ex:


1) CONTAINERS MIGHT CRASH/GO DOWN AND NEED TO BE REPLACED 







2) WE MIGHT NEED MORE CONTAINER INSTANCES UPON TRAFFIC SPIKES 







3) INCOMING TRAFFIC SHOULD BE DISTRIBUTED EQUALLY ALONG CONTAINERS...
















-> E JÁ USAMOS A AJUDA DO 'ECS'

SEM MESMO PERCEBER...











--> OK.... POR EXEMPLO,

O SERVIÇO 

'ECS'



VAI AUTOMATICAMENTE 'CHECK'


A _SAÚDE DE NOSSOS CONTAINERS,

VAI CHECAR SE ESTÃO UP AND RUNNING,

E AÍ 

VAI 
RESTARTAR NOSSOS CONTAINERS,



SE ELES CRASHAREM...















-> E JÁ VIMOS 




ISSO,
 

 LÁ 

 NA SECTION DE DEPLOYMENMT,


 QUANDO 


 NOSSO CONTAINER 

 FALHOU EM SE CONECTAR 

 A 
 1 DATABASE,

 E AÍ 
 FOI 

 'RESTARTED, RESTARTED, RESTARTED, 200x'..















 --> OK... ISSO QUER DIZER QUE, QUANDO USAMOS O ECS,


 É 

 MT FÁCIL TIRAR VANTAGEM DISSO...













--> CERTO.... E AINDA QUE NÃO TENHAMOS HABILITADO ESSA OPTION,


O ECS TAMBÉM 


TERIA NOS AJUDADO COM O SCALING ------> 'SET AUTO SCALING' -----> O AUMENTO E REDUÇAÕ 


DINÂMICA DO NÚMERO 




DE CONTAINER INSTANCES QUE ESTÃO 'UP AND RUNNING',


PARA 

HANDLAR INCOMING TRAFFIC SPIKES,

POR EXEMPLO...















POR FIM, 


O ECS TAMBÉM TINHA UMA FERRAMENTA CHAMADA DE 'LOAD BALANCER',


'APPLICATION LOAD BALANCER',











QUE USAMOS PARA TER 1 'UNCHANGING IP/DOMAIN ADDRESS',

QUE 



NOS DARIA 
NÃO 

SÓ 





ESSE DOMAIN FIXO, QUE NUNCA MUDA (nem com o RESTART DE 1 CONTAINER),








MAS TAMBÉM 






ASSEGURARIA/ASSEGURA QUE, SE VC TIVER TRAFFIC,

ESSE 

TRAFFIC SERÁ _ DISTRIBUÍDO UNIFORMEMENTE AO LONGO 

DE TODAS AS 'RUNNING CONTAINER INSTANCES'... -> ISSO SE VC __ TIVER MAIS DE 1 'RUNNING CONTAINER INSTANCE'...


















- ok... isso significa que serviços com 'AWS ECS'

JÁ NOS AJUDAM A SOLUCIONAR OS PROBLEMAS QUE 

O PROFESSOR MENCIONOU ------> OU SEJA,






ISSO APENAS NOS MOSTRA QUE 

_ USAR ESSES MANAGED SERVICES, COMO A 'ECS',

PODE SER BEM MELHOR DO QUE FAZER DEPLOY MANUAL DE TUDO..














--> MAS É CLARO QUE TEMOS TAMBÉM


1 DOWNSIDE, DESVANTAGEM,

QUNDO USAMOS O AWS ECS.. --> QUANDO USAMOS ESSE SERVICE,


FICAMOS PRATICAMENTE 



''LOCKED-IN''' A ESSE SERVICE...













--> SE USAMOS 1 'SPECIFIC CLOUD SERVICE'


POR CONTA DE ALGUM CLOUD PROVIDER, NÃO INTERESSA O CLOUD PROVIDER ESCOLHIDO,


ESTAREMOS 



'LOCKED INTO THAT SERVICE',


de certa forma...














-> O PROBLEMA COM O ECS, NO CASO,

É QUE 


PRECISAMOS DEFINIR TUDO 




E CONFIGURAR TUDO ''CONFORME DEFINIDO PELO AWS'' --> E O AWS PENSA 


NAS COISAS COMO 





'CLUSTERS',

'TASKS'

'SERVICES',

'CONTAINERS'..








-> E, COM ISSO,


FICAMOS LIMITADOS _ÀS OPÇÕSE QUE O ECS NOS DÁ.. --> E O QUE ESCOLHERMOS FUNCIONARÁ PARA O AWS ECS,
SIM...














--> PODEMOS USAR A INTERFACE DO ECS CONSOLE... -----> MAS TAMBÉM 

TEMOS 




A INTERFACE 'ecs-cli configure' ----> É USADA NO TERMINAL... AÍ NÃO PRECISAMOS USAR O CONSOLE DA AWS, A INTERFACE DO BROWSER....























---> ESSE TERMINAL, COMMAND LINE, É OPCIONAL...












-> E, NA COMMAND LINE,
PODEMOS 

TAMBÉM 
DEFINIR 'CONFIGURATION FILES'


PARA 


NOSSO 

ECS CLUSTER E TASKS ---> E AÍ PODEMOS USAR ESSE CLI DO 'AWS ECS'




PARA PEGAR TODAS ESSAS CONFIG FILES E CRIAR OS APPROPRIATE CLOUD RESOURCES 

COM BASE NISSO... -----> ISSO QUER DIZER UQE NÃO SOMOS FORÇADOS A USAR A UI,





PQ PODEMOS USAR 'CONFIG FILES'




'ecs-cli configure'...














OK... MAS O PROBLEMA DE VERDADE, AQUI,
É QUE 

ESTAREMOS 'LOCKED-IN'  AO SERVICE 'ECS' DA AWS..
















-> ISSO QUER DIZER QUE SE TENTARMOS


TROCAR PARA OUTRO SERVICE, POR OUTRO CLOUD PROVIDER,



AS CONFIG FILES PARA O 'AWS ECS'

NÃO VÃO FUNCIONAR LÁ,






PQ AS SETTINGS QUE VC ESCREVER 






para o ECS VÃO FUNCIONAR APENAS COM O ECS,



E NÃO COM OUTROS SERVICES, DE OUTROS CLOUD PROVIDERS,



COMO 


O 'MICROSOFT AZURE'...




















-----> além de ficar 'LOCKED IN' àquele service específico (aws ecs, nesse caso),


SEREMOS FORÇADOS TAMBÉM A APRENDER 

A SINTAXE, SPECIFICS,


SERVICES E CONFIG OPTIONS DESSE PROVIDER... ------> E, SE TROCAMOS PARA OUTRO PROVIDER,


TEREMOS 


DE USAR A SINTAXE DO OUTRO PROVIDER,

E AÍ 
TEREMOS DE MANUALMENTE 


TRADUZIR A CONFIGURATION 


DO AWS ECS 

PARA 



A SINTAXE DESSE OUTRO CLOUD PROVIDER 

















--> O PROBLEMA PRINCIPAL,
PORTANTO,

É QUE 

CONHECER O DOCKER EM SI NÃO SERÁ O SUFIICENTE,


PQ 


AÍ TEREMOS DE APRENDER TAMBÉM SOBRE O 'AWS ECS',



OU SOBRE QUALQUER SISTEMA QUE VAMOS UTILIZAR... -----> MAS ISSO É TOTALMENTE 


FINE,

PQ 


VOCÊ PODE TALVEZ QUERER 


'STICK TO ECS'... ->  assim que 

VC 


APRENDER SOBRE O 'ECS',




VC TERÁ ESSA HABILIDADE, E AÍ VC FICARÁ 'FINE'....










MAS ISSO PODE SER 1 ISSUE...









-. E É AÍ QUE O KUBERNETES PODE NOS AJUDAR....