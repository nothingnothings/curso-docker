











OK... 




DENTRO DO SOURCE FOLDER,


DENTRO DO RECÉM-CRIADO LARAVEL APP,


VAMOS ATÉ O 




ARQUIVO '.env'...












--> ESSE ARQUIVO FOI CRIADO PELO LARAVEL,


E 

SEGURA UM POUCO DE CONFIG PARA O LARAVEL EM SI...












--> O PEDAÇO MAIS IMPORTANTE DE INFORMATION, PARA NÓS,

NESSE LARAVEL APP,


É AQUELE BLOCO 

DE 

INFO 




''

DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=laravel
DB_USERNAME=root
DB_PASSWORD=

''






ISSO SEGURA A 'CONNECTION INFORMATION'


QUE O LARAVEL VAI USAR PARA 

SE CONECTAR A UMA 

DATABASE MYSQL...













-> E PRECISAMOS AJUSTAR ESSE NEGÓCIO, DE MODO QUE O LARAVEL CONSIGA 

SE CONECTAR À DATABASE...








--> VAMOS TROCAR O NOME DA DATABASE,

colocar 


'homestead'....









-> O USERNAME E PASSWORD TAMBÉM...






-> SE FIZÉSSEMOS HARDCODE, FICARIA ASSIM:





''

DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=homestead
DB_USERNAME=homestead
DB_PASSWORD=password

''











--> OK... COLOQUEI AS MESMAS COISAS QUE HAVIA DEFINIDO NO MYSQL 

CONTAINER:





MYSQL_DATABASE=homestead
MYSQL_USER=homestead
MYSQL_PASSWORD=password
MYSQL_ROOT_PASSWORD=password












certo...










-> OK... MAS O 'DB_HOST',


ALI,

NÃO VAI 

SER 

ESSE '127.0.0.1',






E SIM 
SERÁ 





'mysql',


QUE 


É O NOME DE NOSSO SERVICE 'mysql',



LÁ 

NO ARQUIVO 
'docker-compose' -->  JUSTAMENTE 

PQ 




ESSES REQUESTS SERÃO DISPARADOS PELO 'PHP LARAVEL APP',


rodando 

dentro de nosso CONTAINER 'php',





E ESSE CONTAINER VAI ESTAR RODANDO NA MESMA NETWORK DO CONTAINER 'mysql',
QUE 

É ONDE TENHO MINHA DATABASE MYSQL... --> E, COLOCANDO 'mysql',




O DOCKER CONSEGUIRÁ 'RESOLVE' ISSO PARA 1 IP ADDRESS VÁLIDO...










--> É POR ISSO QUE FICA ASSIM:








DB_CONNECTION=mysql
DB_HOST=mysql
DB_PORT=3306
DB_DATABASE=homestead
DB_USERNAME=homestead
DB_PASSWORD=password
















OK... COM ESSES AJUSTES FEITOS,

NÃO PRECISAMOS MAIS FAZER NADA...







SALVAMOS ESSE ARQUIVO '.env',

E AÍ 

PODEMOS 

RODAR ESSE APP...










--> PARA FAZER ISSO,

USAMOS 

DOCKER-COMPOSE NOVAMENTE...









--> RODAMOS 



'docker-compose up'


PARA 



RODAR 

OS 

SERVICES 

DESEJADOS POR NÓS...











-> MAS ANTES __ DE 



RODARMOS ESSE COMANDO, DEVEMOS PAUSAR E AVALIAR 'QUAIS SERVICES QUEREMOS QUE 

SEJAM EXECUTADOS'...











-> QUEREMOS  RODAR O 


'php',

o 

'mysql'


e o 


'server'...











--> CERTO... O 




'server'

É NOSSO MAIN ENTRYPOINT,


QUE VAI 'SERVE' NOSSO APP,

E QUE VAI 'FORWARD'

OS REQUESTS 


AO _ NOSSO PHP INTERPRETER... (o outro container)..












O PHP INTERPRETER VAI EVENTUALMENTE,


INDIRETAMENTE,

SE COMUNICAR 


AO 


CONTAINER MYSQL (mysql database), 


PQ 


NOSSO CÓDIGO VAI DEPENDER DISSO..













MAS AQUI TEMOS 1 PROBLEMA... ------> NOSSO SERVER, 

QUE É O MAIN ENTRYPOINT 



DO APP,

ATUALMENTE _ NÃO SABE _ NADA _ SOBRE NOSSO SOURCE-CODE (o source-code do laravel)...












--> O NOSSO 'INTERPRETER' SABE/KNOWS  O QUE É O NOSSO SOURCE CODE E TUDO MAIS,


MAS ISSO _ NÃO É O SUFICIENTE... -------> ISSO PQ _ O REQUEST__ VAI _ ATINGIR __ 


NOSSO 


SERVER __ ANTES_ _ DE MAIS NADA (antes de chegar no 'interpreter')... -->  E A ÚNICA 


FUNÇÃO 

DESSE SERVER É FORWARDAR OS REQUESTS 


AO NOSSO 

PHP INTERPRETER... ------> ISSO SIGNIFICA QUE 

ESSES ARQUIVOS PHP 
PRECISAM 


FICAR EXPOSTOS 


AO __ SERVER... ------>  ISSO QUER DIZER QUE 

PRECISAMOS 




ASSIGNAR 1 VOLUME EXTRA LÁ 




na key de 'server', no docker-compose,

E ESSE 
VOLUME 

EXTRA SERÁ OUTRA BIND-MOUNT,

EM QUE 



BINDAREMOS 
O FOLDER DE 

'src' 




AO __ FOLDER INTERNO (no container)

DE 



'/var/www/html' ----> DENTRO DO CONTAINER __ 'server'...













TIPO ASSIM:












version: '3.8'
services:
  server:
    image: 'nginx:stable-alpine'
    ports:
      - '8000:80'
    volumes:
      - './nginx/nginx.conf:/etc/nginx/nginx.conf:ro'
      - './src:/var/www/html'











COLOCAMOS ESSE FOLDER PQ 

É 



O CONTEÚDO DESSE FOLDER 



QUE SERÁ SERVIDO,

E É 



BEM NELE QUE ESTAREMOS 'LOOKING FOR FILES' (mais precisamente, as files dentro de '/var/www/html/public')















--> OK... AGORA PODEMOS ENTRAR NO TÓPICO DE 'RUNNING OUR SERVICES' com o docker-compose..







PARA RODAR NOSSO APP E TESTAR ESSES SERVICES,


USAMOS NOVAMENTE 



'docker-compose up'...











-> CERTO.... MAS O PROBLEMA, NOVAMENTE, SERÁ DE 'ORDEM'..










--> QUEREMOS QUE OS CONTAINERS SEJAM EXECUTADOS EM 1 CERTA ORDEM,

E QUE __ APENAS __ ALGUNS CONTAINERS SEJAM EXECUTADOS (os utility containers não deverão ser executados)...











--> PARA ISSO, USAREMOS A KEY DE 'depends_on:',


TIPO ASSIM:






  php:
      # sintaxe mais complexa de build...
    build:
      context: '/dockerfiles'
      dockerfile: 'php.dockerfile'
        # 'DELEGATED' vai MELHORAR 1 POUCO A PERFORMANCE, PQ ESSE CONTAINER DE 'php' NÃO DEVERÁ WRITE BACK A ESSE FOLDER __ COM TANTA FREQUÊNCIA ASSIM, E AS COISAS QUE ELE FAZ WRITE NÃO PRECISAM SER REFLETIDAS NA HOST MACHINE INSTANTANEAMNETE.. (pq ELE NÃO VAI WRITE _ ALGUMA _ COISA QUE PRECISAMOS __ ACESSAR INSTANTANEAMENTE NA HOST MACHINE) 
    volumes:
        - './src:/var/www/html:delegated'
    ports:
        - '3000:9000'
    depends_on:
        - server
        - mysql
        












OK... 








MAS AGORA NÃO QUEREMOS BRING UP TODOS OS SERVICES,

E SIM APENAS ALGUNS...











--> E A COISA LEGAL É QUE o

'docker-compose'


POSSUI UMA FEATURE ESPECIAL...










--> PODEMOS VER ESSA FEATURE COM 'DOCKER-COMPOSE UP  --help'....














--> PODEMOS TAMBÉM TARGETTAR ___SERVICES ESPECIFICOS,

COM O DOCKER-COMPOSE...






tipo assim:









docker-compose up mysql server php 













--> RODAMOS ISSO EM 'DETACHED MODE', E AÍ 
TESTAMOS, PARA VER SE FUNCIONA...











--> SE INSPECIONAMOS OS CONTAINERS,



VEREMOS 
QUE 

2 CONTAINERS ESTARÃO RODANDO,

MAS 

O 


CONTAINER 
DE 


'server'

TERÁ 

ACABADO (nem iniciou)...













-> SIGNIFICA QUE ALGO DEU ERRADO COM ESSE CONTAINER...



















--> O ERRO FOI POR PARTE DO PROFESSOR... 







--> o erro foi causado pela escrita de 




um volume errado,



que era este:


      - './nginx/nginx.conf:/etc/nginx/nginx.conf:ro'









ISSO ESTÁ ERRADO...




O PATH CORRETO É 



      - './nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro'











EX:







  server:
    image: 'nginx:stable-alpine'
    ports:
      - '8000:80'
    #SIM, É POSSÍVEL BINDAR APENAS 1 ÚNICO ARQUIVO EM 1 FOLDER, EM VEZ DE 1 FOLDER INTEIRO...
    volumes:
      # DEVEMOS BINDAR ESSA PASTA LOCAL, COM 1 BIND MOUNT, A ESSE PATH INTERNO DO CONTAINER, QUE É '/etc/nginx/nginx.conf' (pq, sim, é apenas esse arquivo que interessa, dentro daqeula pasta)..
      # ESSA CONFIG FILE É NECESSÁRIA PARA FAZER O WEBSERVER NGINX FUNCIONAR...
      - './nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro'
      - './src:/var/www/html'











O PROPÓSITO DESSA FILE É JUSTAMENTE SER 'MERGED'

EM 

1 



BIGGER 

NGINX CONFIG,

QUE AÍ SERÁ SETTADA DENTRO DA NGINX IMAGE...









--> NOSSA FILE INTERNA DE 'nginx.conf' DEVERÁ SER MERGEADA COM ESSA FILE 

INTERNA 



DO CONTAINER, POR MEIO DESSE BIND MOUNT...











OK.. AÍ REPETIMOS O COMANDO  DO 'docker-compose up'...

TIPO ASSIM:





docker-compose up -d server php mysql





















--> ok... COM ISSO, SE ENTRARMOS, NA NOSSA LOCALHOST MACHINE,



no endereço 

'localhost:8000',


ENCONTRAREMOS A STARTING PAGE DO LARAVEL...





ok... mas meu negócio não funcionou.... alguma coisa deu errado...










--> o 'mysql' e o 'php' conseguiram ser executados,

mas o SERVER NÃO FOI STARTADO...








FOI ESTE ERRO, A CAUSA DO PROBLEMA:






php-laravel-docker-setup-server-1  | 10-listen-on-ipv6-by-default.sh: info: can not modify /etc/nginx/conf.d/default.conf (read-only file system?)











_> OU SEJA,

TENHO QUE TIRAR O ':ro'

daquele path...







--> outra hipótese pode ter sido este erro:



php-laravel-docker-setup-server-1  | nginx: [emerg] unknown directive "include_fastcgi_params" 
in /etc/nginx/conf.d/default.conf:17















-> BEM, CORRIGI O ARQUIVO 



conf errado,




que agora ficou assim:









server {
    listen 80; # faz listen NA PORT 80...
    index index.php index.html; # HANDLA REQUESTS A 'INDEX FILES'...
    server_name localhost; 
    root /var/www/html/public; #TAMBÉM ASSEGURA QUE PROCURAMOS NESSE DIRECTORY PARA FILES QUE USAREMOS PARA 'RESPOND' AOS REQUESTS... (ainda não temos esses arquivos)..
    location / { #SÃO REDIRECTION RULES... -> BASICAMENTE ASSEGURAM QUE INCOMING REQUESTS SÃO REDIRECIONADOS A PHP FILES....
        try_files $uri $uri/ /index.php?$query_string;
    }
    location ~ \.php$ { # OS REQUESTS QUE JÁ TARGETTAM PHP FILES SÃO ENTÃO REDIRECIONADOS AO NOSSO 'PHP INTERPRETER'... é isso que fazemos, aqui...
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        # 'php' em 'php:9000' poderia ser um IP ADDRESS, como '127.0.0.1'...
        # aqui, 'php', nesse local, se refere ao 'PHP CONTAINER', justamente por 'server' e 'php' (nossos containers) ESTAREM EM 1 MESMA NETWORK, POR CONTA DO DOCKER-COMPOSE (comportamento default do compose, que coloca todos os containers/services em 1 mesma network)...
        # targettamos a port de '9000' no container 'php', pq essa é a port que A IMAGE BASE DO PHP nos deixa exposta...
        fastcgi_pass php:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info; 
    }
}









ISSO FEITO, REEXECUTO O DOCKER-COMPOSE UP,

assim:









docker-compose up -d server php mysql











OK... AGORA O SERVIDOR STARTOU, SIM,

MAS GANHEI __ OUTRO ERRO...









-->  ''' Parse error: syntax error, unexpected '|', expecting variable (T_VARIABLE) in /var/www/html/vendor/nunomaduro/termwind/src/Functions.php on line 17 '''





--> parece que o erro foi causado PELA VERSÃO DO PHP...

O PIPE OPERATOR NÃO EXISTE NAS VERSÕES INFERIORES A '8.0'...







E O PROFESSOR USOU A VERSÃO 7.4...





FROM php:7.4-fpm-alpine











MELHOR USAR A 8, ASSIM:



FROM php:8-fpm-alpine











OK... MAS AINDA SIGO COM O ERRO...









ESTA  É A RAZÃO DO ERRO:


docker exec -it php-laravel-docker-setup-php-1 php -v
PHP 7.4.33 (cli) (built: Nov 12 2022 09:21:12) ( NTS )
Copyright (c) The PHP Group
Zend Engine v3.4.0, Copyright (c) Zend Technologies









-a versão instalada está como '7.4.33', e não 8.0...









como posso conseguir a versão 8.0? (já a escrevi na minha dockerfile, mas a dockerfile não está sendo updatada)...










rodei: 

'docker system prune -a'...








-> ISSO VAI REMOVER TODOS OS CONTAINERS, IMAGES E NETWORKS DO MEU SISTEMA....








-> DEPOIS DISSO, TENTO BUILDAR OS CONTAINERS MAIS UMA VEZ...









e agora...?





agora a versão está correta...






certo... agora recebi uma tela diferente... bem melhor...









--> acho que 





agora falta só o ENV interno do laravel...










GANHEI ESTE ERROR:








The stream or file "/var/www/html/storage/logs/laravel.log" could not be opened in append mode: Failed to open stream: Permission denied The exception occurred while attempting to log: The stream or file "/var/www/html/storage/logs/laravel.log" could not be opened in append mode: Failed to open stream: Permission denied The exception occurred while attempting to log: The stream or file "/var/www/html/storage/logs/laravel.log" could not be opened in append mode: Failed to open stream: Permission denied The exception occurred while attempting to log: The stream or file "/var/www/html/storage/logs/laravel.log" could not be opened in append mode: Failed to open stream: Permission denied The exception occurred while attempting to log: The stream or file "/var/www/html/storage/logs/laravel.log" could not be opened in append mode: Failed to open stream: Permission denied The exception occurred while attempting to log: The stream or file "/var/www/html/storage/logs/laravel.log" could not be opened in append mode: Failed to open stream: Permission denied The exception occurred while attempting to log: The stream or file "/var/www/html/storage/logs/laravel.log" could not be opened in append mode: Failed to open stream: Permission denied The exception occurred while attempting to log: The stream or file "/var/www/html/storage/logs/laravel.log" could not be opened in append mode: Failed to open stream: Permission denied The exception occurred while attempting to log: The stream or file "/var/www/html/storage/logs/laravel.log" could not be opened in append mode: Failed to open stream: Permission denied The exception occurred while attempting to log: The stream or file "/var/www/html/storage/logs/laravel.log" could not be opened in append mode: Failed to open stream: Permission denied The exception occurred while attempting to log: The stream or file "/var/www/html/storage/logs/laravel.log" could not be opened in append mode: Failed to open stream: Permission denied The exception occurred while attempting to log: The stream or file "/var/www/html/storage/logs/laravel.log" could not be opened in append mode: Failed to open stream: Permission denied The exception occurred while attempting to log: The stream or file "/var/www/html/storage/logs/laravel.log" could not be opened in append mode: Failed to open stream: Permission denied The exception occurred while attempting to log: The stream or file "/var/www/html/storage/logs/laravel.log" could not be opened in append mode: Failed to open stream: Permission denied The exception occurred while attempting to log: The stream or file "/var/www/html/storage/logs/laravel.log" could not be opened in append mode: Failed to open stream: Permission denied The exception occurred while attempting to log: file_put_contents(/var/www/html/storage/framework/views/19d1ca22cd8db231f88e0685e9c3a20e.php): Failed to open stream: Permission denied Context: {"exception":{}} Context: {"exception":{}} Context: {"exception":{}} Context: {"exception":{}} Context: {"exception":{}} Context: {"exception":{}} Context: {"exception":{}} Context: {"exception":{}} Context: {"exception":{}} Context: {"exception":{}} Context: {"exception":{}} Context: {"exception":{}} Context: {"exception":{}} Context: {"exception":{}} Context: {"exception":{}}










certo....





mas pq?





talvez seja o ':ro'... --> ok...










MAS NÃO ERA O ':ro'... ERA UM ERRO DE PERMISSÃO...









CONSERTEI O ERRO DE PERMISSÃO POR MEIO DO USOD DE 'chmod' (change mode, do linux)...









O COMANDO FOI ESTE:



docker exec -it php-laravel-docker-setup-php-1 chmod o+w ./storage/ -R













chmod 'o' (others)  ('+w') --> WRITE access -> ADICIONAMOS ESSA PERMISSÃO NA PASTA './storage/'...








flag de '-R' --> Change files and directories recursively. -> essas permissões são aplicadas a todos os arquivos e pastas no interior do negócio...



















    OK... MAS O QUE INTERESSA É QUE AGORA NOSSO LARAVEL APP 



    ESTÁ FUNCIONANDO, PODEMOS O ACESSAR POR MEIO 


    DO 'localhost:8000'...









CERTO...








O PROFESSOR MENCIONA QUE 


COMEÇAR 



APENAS ALGUNS SERVICES/CONTAINERS 


POR MEIO 


DE COMANDOS COMO 




'docker-compose up -d serve server php mysql '










É __ ALGO QUE FUNCIONA, SIM,



MAS QUE É MEIO CUMBERSOME,

PQ 


TEMOS QUE ESCREVER 1 MONTE DE COISAS...

















--> SERIA BEM MAIS LEGAL SE PUDÉSSEMOS APENAS 


COLOCAR 1 NOME DE 'SERVER' AO CONTAINER/SERVICE DE 'server',




E ISSO AÍ JÁ BASTASSE,

JÁ FIZSSE 

OS 

OUTROS 

2 COMANDOS 


SEREM STARTADOS AUTOMATICAMENTE... --------> E ISSO É POSSÍVEL...








PODEMOS __ COMUNICAR 


AO __ DOCKER_ COMPOSE __ QUE 




QUEREMOS QUE ISSO ACONTEÇA, QUEREMOS 

QUE 
O 



'server'


''''PUXE'''' OS OUTROS 2 SERVICES,

OS SERVICES 

DE 

'mysql' 


e 

'php'...











--> PARA ISSO,


DEVEMOS ESPECIFICAR 

'depends_on',


E AÍ 

ESPECIFICAR 

'php' e 'mysql'...








--> SE FIZERMOS ISSO,

ESTAMOS COMUNICANDO 

AO 


DOCKER QUE 
 



NOSSO CONTAINER 'server'

VAI DEPENDER DOS OUTROS DOIS...











ISSO PQ O SERVIDOR NGINX 



APENAS __ FUNCIONA __ SE 

ELE É CAPAZ 

DE CONVERSAR COM O SERVICE DE PHP,


E O 



SERVICE DE PHP SÓ FUNCIONA SE É CAPAZ DE SE COMUNICAR COM O MYSQL CONTAINER...













OU SEJA,
 NO FINAL DAS CONTAS,


 O SERVER DEPENDE DESSES 2 SERVICES...













 É POR ISSO QUE FICA ASSIm:
















 version: '3.8'
services:
  #? PRIMEIRAMENTE, OS 'APP CONTAINERS' (que sempre ficarão rodando, no fundo... pq precisams handlar os requests, por ser um server)..
  #SERVER --> SERÁ RESPONSÁVEL PELO RECEBIMENTO DOS INCOMING REQUESTS E SUA DATA, QUE SERÁ REPASSADA AO 'PHP INTERPRETER' ( container 'PHP')...
  server:
    image: 'nginx:latest'
    ports:
      - '8000:80'
    #SIM, É POSSÍVEL BINDAR APENAS 1 ÚNICO ARQUIVO EM 1 FOLDER, EM VEZ DE 1 FOLDER INTEIRO...
    volumes:
      # DEVEMOS BINDAR ESSA PASTA LOCAL, COM 1 BIND MOUNT, A ESSE PATH INTERNO DO CONTAINER, QUE É '/etc/nginx/nginx.conf' (pq, sim, é apenas esse arquivo que interessa, dentro daqeula pasta)..
      # ESSA CONFIG FILE É NECESSÁRIA PARA FAZER O WEBSERVER NGINX FUNCIONAR...
      - './nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro'
      - './src:/var/www/html'
    depends_on:
      - php
      - mysql

    #PHP --> RESPONSÁVEL PELO RUN E EXECUTE DE NOSSO CÓDIGO PHP (também o código laravel, pq o laravel é um framework php).
    # VAMOS USAR 1 IMAGE CUSTOM, criada por nós...
  php:
      # sintaxe mais complexa de build...
    build:
      context: './dockerfiles'
      dockerfile: 'php.dockerfile'
        # 'DELEGATED' vai MELHORAR 1 POUCO A PERFORMANCE, PQ ESSE CONTAINER DE 'php' NÃO DEVERÁ WRITE BACK A ESSE FOLDER __ COM TANTA FREQUÊNCIA ASSIM, E AS COISAS QUE ELE FAZ WRITE NÃO PRECISAM SER REFLETIDAS NA HOST MACHINE INSTANTANEAMNETE.. (pq ELE NÃO VAI WRITE _ ALGUMA _ COISA QUE PRECISAMOS __ ACESSAR INSTANTANEAMENTE NA HOST MACHINE) 
    volumes:
        - './src:/var/www/html:delegated'
    ports:
        - '3000:9000'
        

    #MYSQL --> é a database MYSQL
  mysql:
      #? DEPOIS DISSO, OS 'UTILITY CONTAINERS' (que SÃO RODADOS, OCASIONALMENTE, DURANTE O RUNTIME, POR NÓS MESMOS, COM 'docker-compose run xxx xxx')..
      image: mysql:5.7
      env_file:
        - ./env/mysql.env
    #'COMPOSER' é TIPO O 'npm do PHP', é usado para CRIAR PROJETOS E INSTALAR DEPENDENCIES PHP (é usado para CRIAR O APP LARAVEL, POR EXEMPLO)...
  composer:
      # 'ARTISAN' É UMA FERRAMENTA DO 'laravel', é o LARAVEL ARTISAN, que é usado para fazer coisas como 'RODAR MIGRATIONS CONTRA NOSSA DATABASE', dentre outras...
      build:
        context: './dockerfiles'
        dockerfile: composer.dockerfile
      volumes:
        - ./src:/var/www/html
  # artisan: # colocamos o 'npm' PQ VAMOS RODAR COMANDOS COMo 'npm install', 'npm  init', etc etc...

  # npm:









--------------------








E COM ESSA CONFIGURAÇÃO ADICIONADA,








O DOCKER-COMPOSE TAMBÉM VAI AUTOMATICAMENTE 'BRING UP'

OS 


SERVICES 


A QUE ESSE CONTAINER AÍ DEPENDE...












--> isso quer dizer que, agora,

se rodamos 


'docker-compose up -d server',









NÓS 3 CONTAINERS/SERVERS SERÃO 




RODADOS EM CONJUNTO...











--> ok...




MAS O PROFESSOR VAI FAZER 'BRING DOWN' ESSES CONTAINERS,

USANDO 

'docker-compose down -v',








PQ _ ELE __ QUER TWEAKAR 1 POUCO MAIS TUDO ISSO...
















--> AS COISAS FUNCIONAM BEM DESSE MODO,

MAS HÁ 1 EXTRA OPTION QUE 

O PROFESSOR QUER ADICIONAR 


AO 


COMMAND DE 'up'...









--> O PEQUENO TWEAK QUE O PROFESSOR QUER 


FAZER TEM RELAÇÃO 



COM NOSSAS CUSTOM IMAGES (como a image criada por 'php.dockerfile' e 'composer.dockerfile')...












ISSO PQ, ATÉ AGORA,



O QUE O DOCKER-COMPOSE FAZ, POR DEFAULT,

É 




'''CHECAR SE 1 IMAGE EXISTE'''' -> E, SE ESSA IMAGE EXISTE,





ELE USA _ ESSA IMAGE.... ------> EM OUTRAS PALAVRAS,

O DOCKER-COMPOSE 


NÃO ESTÁ 

'REBUILDING IMAGES',

NUNCA...







(

    é exatamente por isso que meu container ficava sempre com a versão 

    '7.4' do php; era por isso que eu não conseguia atualizar 

    a versão da image do php para 8.0+...
)









--> ISSO QUER DIZER QUE,



SE NÓS REALIZAMOS ALGUMA MUDANÇA 


NA DOCKERFILE, EM ALGUMA DOCKERFILE,
 

 OU ENTÃO ALGUMA MUDANÇA  _ NAS __ FILES__ QUE 

 SÃO 

 'COPIED IN'


 POR MEIO DO DOCKERFILE (algo que não estamos fazendo aqui, MAS QUE PODERÍAMOS 
 
 ESTAR FAZENDO... UM EXEMPLO CLÁSSICO SÃO APPS NODE, COM O COPY DO 'package.json')..







--> SE TENTÁSSEMOS FAZER ISSO,


ESSAS CHANGES NÃO SERIAM 'PICKED UP' 

PELO DOCKER-COMPOSE -->  E ISSO FAZ SENTIDO,


PQ ANTERIORMENTE,

SEM O DOCKER-COMPOSE,

TAMBÉM ERAMOS 

FORÇADOS 


A REBUILDAR IMAGES MANUALMENTE,


com 

'docker build -t . ' ,


PARA 

TER MUDANÇAS NAS NOSSAS IMAGES...














-> OK... 


  

  É POR ISSO QUE, PARA __FORÇAR__ O DOCKER-COMPOSE  

  A REAVALIAR NOSSA DOCKERFILE __ E __ REBUILDAR IMAGES,

  SE NECESSÁRIO,



  ___DEVEMOS__ ADICIONAR TAMBÉM A OPTION DE 

  '--build'



  NO COMANDO 

  'docker-compose up'...








TIPO ASSIM:









docker-compose up -d --build server ....














QUANDO ESPECIFICADO, ESSA OPTION __ FORÇA __ O DOCKER COMPOSE 

A IR 


POR DENTRO DE TODAS AS DOCKERFILES MAIS UMA VEZ,

E A 


__REBUILDAR __AS IMAGES,

SE ALGO MUDOU... --> E SE NADA MUDOU (por conta do sistema de LAYERS DE NOSSA IMAGE),



O __ DOCKER __ NÃO VAI REBUILDAR COISA ALGUMA,




E __ VAI _ APENAS __ USAR OS 'CACHED LAYERS'...










-> OK...
 






 É POR ISSO QUE SE RODAMOS 

 esse 


 '''
docker-compose up -d --build server 
''',






NO MOMENTO,

NÃO HÁ NENHUM DELAY,

PQ 



ELE VAI DETECTAR QUE NADA FOI ALTERADO NA NOSSA IMAGE...













--> MAS O PROFESSOR REALMENTE RECOMENDA QUE SEMPRE RODEMOS 






docker-compose up -d --build server 





OU ENTÃO 


docker-compose up  -d --build











ISSO VAI GARANTIR QUE SEMPRE USAREMOS 'THE LATEST IMAGES'...











-> OK... É CLARO QUE A ALTERNATIVA É APENAS ADICIONAR '--build'

SE ALGO REALMENTE 
MUDOU NA SUA IMAGE -> OU SEJA, OS CASOS SÃO:






1) VC MUDOU A DOCKERFILE 



2) VC MUDOU ALGUM ARQUIVO/PASTA QUE É ADICIONADO POR CONTA DA DOCKERFILE (comando 'COPY . .')....









CERTO... COM NOSSO APP LARAVEL FUNCIONANDO,


PODEMOS 

ALTERAR 

O CÓDIGO 







DE NOSSO APP,



ALTERAR O CÓDIGO DE 'resources > views',



COLOCAR 



1 H1 TAG 


NESSE ARQUIVO,




aí 






RODAR O comando 

'docker-compose up -d --build server'




PARA 



REBUILDAR A IMAGE, A PARTIR DA DOCKERFILE E DAS MUDANÇAS NOS SEUS ARQUIVOS,


PARA



AÍ 


ESSA MUDANÇA SER REFLETIDA NOS RUNNING CONTAINERS (E na página webV)....










EX:













<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <title>Laravel</title>

        <!-- Fonts -->
        <link rel="preconnect" href="https://fonts.bunny.net">
        <link href="https://fonts.bunny.net/css?family=figtree:400,600&display=swap" rel="stylesheet" />

        <!-- Styles -->
        <style>
            /* ! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com */*,::after,::before{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}::after,::before{--tw-content:''}html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4;font-family:Figtree, sans-serif;font-feature-settings:normal}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}*, ::before, ::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::-webkit-backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.relative{position:relative}.mx-auto{margin-left:auto;margin-right:auto}.mx-6{margin-left:1.5rem;margin-right:1.5rem}.ml-4{margin-left:1rem}.mt-16{margin-top:4rem}.mt-6{margin-top:1.5rem}.mt-4{margin-top:1rem}.-mt-px{margin-top:-1px}.mr-1{margin-right:0.25rem}.flex{display:flex}.inline-flex{display:inline-flex}.grid{display:grid}.h-16{height:4rem}.h-7{height:1.75rem}.h-6{height:1.5rem}.h-5{height:1.25rem}.min-h-screen{min-height:100vh}.w-auto{width:auto}.w-16{width:4rem}.w-7{width:1.75rem}.w-6{width:1.5rem}.w-5{width:1.25rem}.max-w-7xl{max-width:80rem}.shrink-0{flex-shrink:0}.scale-100{--tw-scale-x:1;--tw-scale-y:1;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.grid-cols-1{grid-template-columns:repeat(1, minmax(0, 1fr))}.items-center{align-items:center}.justify-center{justify-content:center}.gap-6{gap:1.5rem}.gap-4{gap:1rem}.self-center{align-self:center}.rounded-lg{border-radius:0.5rem}.rounded-full{border-radius:9999px}.bg-gray-100{--tw-bg-opacity:1;background-color:rgb(243 244 246 / var(--tw-bg-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.bg-red-50{--tw-bg-opacity:1;background-color:rgb(254 242 242 / var(--tw-bg-opacity))}.bg-dots-darker{background-image:url("data:image/svg+xml,%3Csvg width='30' height='30' viewBox='0 0 30 30' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1.22676 0C1.91374 0 2.45351 0.539773 2.45351 1.22676C2.45351 1.91374 1.91374 2.45351 1.22676 2.45351C0.539773 2.45351 0 1.91374 0 1.22676C0 0.539773 0.539773 0 1.22676 0Z' fill='rgba(0,0,0,0.07)'/%3E%3C/svg%3E")}.from-gray-700\/50{--tw-gradient-from:rgb(55 65 81 / 0.5);--tw-gradient-to:rgb(55 65 81 / 0);--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to)}.via-transparent{--tw-gradient-to:rgb(0 0 0 / 0);--tw-gradient-stops:var(--tw-gradient-from), transparent, var(--tw-gradient-to)}.bg-center{background-position:center}.stroke-red-500{stroke:#ef4444}.stroke-gray-400{stroke:#9ca3af}.p-6{padding:1.5rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.text-center{text-align:center}.text-right{text-align:right}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-sm{font-size:0.875rem;line-height:1.25rem}.font-semibold{font-weight:600}.leading-relaxed{line-height:1.625}.text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99 / var(--tw-text-opacity))}.text-gray-900{--tw-text-opacity:1;color:rgb(17 24 39 / var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128 / var(--tw-text-opacity))}.underline{-webkit-text-decoration-line:underline;text-decoration-line:underline}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.shadow-2xl{--tw-shadow:0 25px 50px -12px rgb(0 0 0 / 0.25);--tw-shadow-colored:0 25px 50px -12px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.shadow-gray-500\/20{--tw-shadow-color:rgb(107 114 128 / 0.2);--tw-shadow:var(--tw-shadow-colored)}.transition-all{transition-property:all;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.selection\:bg-red-500 *::selection{--tw-bg-opacity:1;background-color:rgb(239 68 68 / var(--tw-bg-opacity))}.selection\:text-white *::selection{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.selection\:bg-red-500::selection{--tw-bg-opacity:1;background-color:rgb(239 68 68 / var(--tw-bg-opacity))}.selection\:text-white::selection{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.hover\:text-gray-900:hover{--tw-text-opacity:1;color:rgb(17 24 39 / var(--tw-text-opacity))}.hover\:text-gray-700:hover{--tw-text-opacity:1;color:rgb(55 65 81 / var(--tw-text-opacity))}.focus\:rounded-sm:focus{border-radius:0.125rem}.focus\:outline:focus{outline-style:solid}.focus\:outline-2:focus{outline-width:2px}.focus\:outline-red-500:focus{outline-color:#ef4444}.group:hover .group-hover\:stroke-gray-600{stroke:#4b5563}.z-10{z-index: 10}@media (prefers-reduced-motion: no-preference){.motion-safe\:hover\:scale-\[1\.01\]:hover{--tw-scale-x:1.01;--tw-scale-y:1.01;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}}@media (prefers-color-scheme: dark){.dark\:bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39 / var(--tw-bg-opacity))}.dark\:bg-gray-800\/50{background-color:rgb(31 41 55 / 0.5)}.dark\:bg-red-800\/20{background-color:rgb(153 27 27 / 0.2)}.dark\:bg-dots-lighter{background-image:url("data:image/svg+xml,%3Csvg width='30' height='30' viewBox='0 0 30 30' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1.22676 0C1.91374 0 2.45351 0.539773 2.45351 1.22676C2.45351 1.91374 1.91374 2.45351 1.22676 2.45351C0.539773 2.45351 0 1.91374 0 1.22676C0 0.539773 0.539773 0 1.22676 0Z' fill='rgba(255,255,255,0.07)'/%3E%3C/svg%3E")}.dark\:bg-gradient-to-bl{background-image:linear-gradient(to bottom left, var(--tw-gradient-stops))}.dark\:stroke-gray-600{stroke:#4b5563}.dark\:text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175 / var(--tw-text-opacity))}.dark\:text-white{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.dark\:shadow-none{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.dark\:ring-1{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)}.dark\:ring-inset{--tw-ring-inset:inset}.dark\:ring-white\/5{--tw-ring-color:rgb(255 255 255 / 0.05)}.dark\:hover\:text-white:hover{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.group:hover .dark\:group-hover\:stroke-gray-400{stroke:#9ca3af}}@media (min-width: 640px){.sm\:fixed{position:fixed}.sm\:top-0{top:0px}.sm\:right-0{right:0px}.sm\:ml-0{margin-left:0px}.sm\:flex{display:flex}.sm\:items-center{align-items:center}.sm\:justify-center{justify-content:center}.sm\:justify-between{justify-content:space-between}.sm\:text-left{text-align:left}.sm\:text-right{text-align:right}}@media (min-width: 768px){.md\:grid-cols-2{grid-template-columns:repeat(2, minmax(0, 1fr))}}@media (min-width: 1024px){.lg\:gap-8{gap:2rem}.lg\:p-8{padding:2rem}}
        </style>
    </head>
    <body class="antialiased">
        <h1>HELLO!!!</h1>
        <div class="relative sm:flex sm:justify-center sm:items-center min-h-screen bg-dots-darker bg-center bg-gray-100 dark:bg-dots-lighter dark:bg-gray-900 selection:bg-red-500 selection:text-white">
            @if (Route::has('login'))
                <div class="sm:fixed sm:top-0 sm:right-0 p-6 text-right z-10">
                    @auth
                        <a href="{{ url('/home') }}" class="font-semibold text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Home</a>
                    @else
                        <a href="{{ route('login') }}" class="font-semibold text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Log in</a>

                        @if (Route::has('register'))
                            <a href="{{ route('register') }}" class="ml-4 font-semibold text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Register</a>
                        @endif
                    @endauth
                </div>
            @endif

            <div class="max-w-7xl mx-auto p-6 lg:p-8">
                <div class="flex justify-center">
                    <svg viewBox="0 0 62 65" fill="none" xmlns="http://www.w3.org/2000/svg" class="h-16 w-auto bg-gray-100 dark:bg-gray-900">
                        <path d="M61.8548 14.6253C61.8778 14.7102 61.8895 14.7978 61.8897 14.8858V28.5615C61.8898 28.737 61.8434 28.9095 61.7554 29.0614C61.6675 29.2132 61.5409 29.3392 61.3887 29.4265L49.9104 36.0351V49.1337C49.9104 49.4902 49.7209 49.8192 49.4118 49.9987L25.4519 63.7916C25.3971 63.8227 25.3372 63.8427 25.2774 63.8639C25.255 63.8714 25.2338 63.8851 25.2101 63.8913C25.0426 63.9354 24.8666 63.9354 24.6991 63.8913C24.6716 63.8838 24.6467 63.8689 24.6205 63.8589C24.5657 63.8389 24.5084 63.8215 24.456 63.7916L0.501061 49.9987C0.348882 49.9113 0.222437 49.7853 0.134469 49.6334C0.0465019 49.4816 0.000120578 49.3092 0 49.1337L0 8.10652C0 8.01678 0.0124642 7.92953 0.0348998 7.84477C0.0423783 7.8161 0.0598282 7.78993 0.0697995 7.76126C0.0884958 7.70891 0.105946 7.65531 0.133367 7.6067C0.152063 7.5743 0.179485 7.54812 0.20192 7.51821C0.230588 7.47832 0.256763 7.43719 0.290416 7.40229C0.319084 7.37362 0.356476 7.35243 0.388883 7.32751C0.425029 7.29759 0.457436 7.26518 0.498568 7.2415L12.4779 0.345059C12.6296 0.257786 12.8015 0.211853 12.9765 0.211853C13.1515 0.211853 13.3234 0.257786 13.475 0.345059L25.4531 7.2415H25.4556C25.4955 7.26643 25.5292 7.29759 25.5653 7.32626C25.5977 7.35119 25.6339 7.37362 25.6625 7.40104C25.6974 7.43719 25.7224 7.47832 25.7523 7.51821C25.7735 7.54812 25.8021 7.5743 25.8196 7.6067C25.8483 7.65656 25.8645 7.70891 25.8844 7.76126C25.8944 7.78993 25.9118 7.8161 25.9193 7.84602C25.9423 7.93096 25.954 8.01853 25.9542 8.10652V33.7317L35.9355 27.9844V14.8846C35.9355 14.7973 35.948 14.7088 35.9704 14.6253C35.9792 14.5954 35.9954 14.5692 36.0053 14.5405C36.0253 14.4882 36.0427 14.4346 36.0702 14.386C36.0888 14.3536 36.1163 14.3274 36.1375 14.2975C36.1674 14.2576 36.1923 14.2165 36.2272 14.1816C36.2559 14.1529 36.292 14.1317 36.3244 14.1068C36.3618 14.0769 36.3942 14.0445 36.4341 14.0208L48.4147 7.12434C48.5663 7.03694 48.7383 6.99094 48.9133 6.99094C49.0883 6.99094 49.2602 7.03694 49.4118 7.12434L61.3899 14.0208C61.4323 14.0457 61.4647 14.0769 61.5021 14.1055C61.5333 14.1305 61.5694 14.1529 61.5981 14.1803C61.633 14.2165 61.6579 14.2576 61.6878 14.2975C61.7103 14.3274 61.7377 14.3536 61.7551 14.386C61.7838 14.4346 61.8 14.4882 61.8199 14.5405C61.8312 14.5692 61.8474 14.5954 61.8548 14.6253ZM59.893 27.9844V16.6121L55.7013 19.0252L49.9104 22.3593V33.7317L59.8942 27.9844H59.893ZM47.9149 48.5566V37.1768L42.2187 40.4299L25.953 49.7133V61.2003L47.9149 48.5566ZM1.99677 9.83281V48.5566L23.9562 61.199V49.7145L12.4841 43.2219L12.4804 43.2194L12.4754 43.2169C12.4368 43.1945 12.4044 43.1621 12.3682 43.1347C12.3371 43.1097 12.3009 43.0898 12.2735 43.0624L12.271 43.0586C12.2386 43.0275 12.2162 42.9888 12.1887 42.9539C12.1638 42.9203 12.1339 42.8916 12.114 42.8567L12.1127 42.853C12.0903 42.8156 12.0766 42.7707 12.0604 42.7283C12.0442 42.6909 12.023 42.656 12.013 42.6161C12.0005 42.5688 11.998 42.5177 11.9931 42.4691C11.9881 42.4317 11.9781 42.3943 11.9781 42.3569V15.5801L6.18848 12.2446L1.99677 9.83281ZM12.9777 2.36177L2.99764 8.10652L12.9752 13.8513L22.9541 8.10527L12.9752 2.36177H12.9777ZM18.1678 38.2138L23.9574 34.8809V9.83281L19.7657 12.2459L13.9749 15.5801V40.6281L18.1678 38.2138ZM48.9133 9.14105L38.9344 14.8858L48.9133 20.6305L58.8909 14.8846L48.9133 9.14105ZM47.9149 22.3593L42.124 19.0252L37.9323 16.6121V27.9844L43.7219 31.3174L47.9149 33.7317V22.3593ZM24.9533 47.987L39.59 39.631L46.9065 35.4555L36.9352 29.7145L25.4544 36.3242L14.9907 42.3482L24.9533 47.987Z" fill="#FF2D20"/>
                    </svg>
                </div>

                <div class="mt-16">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 lg:gap-8">
                        <a href="https://laravel.com/docs" class="scale-100 p-6 bg-white dark:bg-gray-800/50 dark:bg-gradient-to-bl from-gray-700/50 via-transparent dark:ring-1 dark:ring-inset dark:ring-white/5 rounded-lg shadow-2xl shadow-gray-500/20 dark:shadow-none flex motion-safe:hover:scale-[1.01] transition-all duration-250 focus:outline focus:outline-2 focus:outline-red-500">
                            <div>
                                <div class="h-16 w-16 bg-red-50 dark:bg-red-800/20 flex items-center justify-center rounded-full">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="w-7 h-7 stroke-red-500">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 6.042A8.967 8.967 0 006 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 016 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 016-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0018 18a8.967 8.967 0 00-6 2.292m0-14.25v14.25" />
                                    </svg>
                                </div>

                                <h2 class="mt-6 text-xl font-semibold text-gray-900 dark:text-white">Documentation</h2>

                                <p class="mt-4 text-gray-500 dark:text-gray-400 text-sm leading-relaxed">
                                    Laravel has wonderful documentation covering every aspect of the framework. Whether you are a newcomer or have prior experience with Laravel, we recommend reading our documentation from beginning to end.
                                </p>
                            </div>

                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="self-center shrink-0 stroke-red-500 w-6 h-6 mx-6">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75" />
                            </svg>
                        </a>

                        <a href="https://laracasts.com" class="scale-100 p-6 bg-white dark:bg-gray-800/50 dark:bg-gradient-to-bl from-gray-700/50 via-transparent dark:ring-1 dark:ring-inset dark:ring-white/5 rounded-lg shadow-2xl shadow-gray-500/20 dark:shadow-none flex motion-safe:hover:scale-[1.01] transition-all duration-250 focus:outline focus:outline-2 focus:outline-red-500">
                            <div>
                                <div class="h-16 w-16 bg-red-50 dark:bg-red-800/20 flex items-center justify-center rounded-full">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="w-7 h-7 stroke-red-500">
                                        <path stroke-linecap="round" d="M15.75 10.5l4.72-4.72a.75.75 0 011.28.53v11.38a.75.75 0 01-1.28.53l-4.72-4.72M4.5 18.75h9a2.25 2.25 0 002.25-2.25v-9a2.25 2.25 0 00-2.25-2.25h-9A2.25 2.25 0 002.25 7.5v9a2.25 2.25 0 002.25 2.25z" />
                                    </svg>
                                </div>

                                <h2 class="mt-6 text-xl font-semibold text-gray-900 dark:text-white">Laracasts</h2>

                                <p class="mt-4 text-gray-500 dark:text-gray-400 text-sm leading-relaxed">
                                    Laracasts offers thousands of video tutorials on Laravel, PHP, and JavaScript development. Check them out, see for yourself, and massively level up your development skills in the process.
                                </p>
                            </div>

                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="self-center shrink-0 stroke-red-500 w-6 h-6 mx-6">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75" />
                            </svg>
                        </a>

                        <a href="https://laravel-news.com" class="scale-100 p-6 bg-white dark:bg-gray-800/50 dark:bg-gradient-to-bl from-gray-700/50 via-transparent dark:ring-1 dark:ring-inset dark:ring-white/5 rounded-lg shadow-2xl shadow-gray-500/20 dark:shadow-none flex motion-safe:hover:scale-[1.01] transition-all duration-250 focus:outline focus:outline-2 focus:outline-red-500">
                            <div>
                                <div class="h-16 w-16 bg-red-50 dark:bg-red-800/20 flex items-center justify-center rounded-full">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="w-7 h-7 stroke-red-500">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 7.5h1.5m-1.5 3h1.5m-7.5 3h7.5m-7.5 3h7.5m3-9h3.375c.621 0 1.125.504 1.125 1.125V18a2.25 2.25 0 01-2.25 2.25M16.5 7.5V18a2.25 2.25 0 002.25 2.25M16.5 7.5V4.875c0-.621-.504-1.125-1.125-1.125H4.125C3.504 3.75 3 4.254 3 4.875V18a2.25 2.25 0 002.25 2.25h13.5M6 7.5h3v3H6v-3z" />
                                    </svg>
                                </div>

                                <h2 class="mt-6 text-xl font-semibold text-gray-900 dark:text-white">Laravel News</h2>

                                <p class="mt-4 text-gray-500 dark:text-gray-400 text-sm leading-relaxed">
                                    Laravel News is a community driven portal and newsletter aggregating all of the latest and most important news in the Laravel ecosystem, including new package releases and tutorials.
                                </p>
                            </div>

                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="self-center shrink-0 stroke-red-500 w-6 h-6 mx-6">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75" />
                            </svg>
                        </a>

                        <div class="scale-100 p-6 bg-white dark:bg-gray-800/50 dark:bg-gradient-to-bl from-gray-700/50 via-transparent dark:ring-1 dark:ring-inset dark:ring-white/5 rounded-lg shadow-2xl shadow-gray-500/20 dark:shadow-none flex motion-safe:hover:scale-[1.01] transition-all duration-250 focus:outline focus:outline-2 focus:outline-red-500">
                            <div>
                                <div class="h-16 w-16 bg-red-50 dark:bg-red-800/20 flex items-center justify-center rounded-full">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="w-7 h-7 stroke-red-500">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M6.115 5.19l.319 1.913A6 6 0 008.11 10.36L9.75 12l-.387.775c-.217.433-.132.956.21 1.298l1.348 1.348c.21.21.329.497.329.795v1.089c0 .426.24.815.622 1.006l.153.076c.433.217.956.132 1.298-.21l.723-.723a8.7 8.7 0 002.288-4.042 1.087 1.087 0 00-.358-1.099l-1.33-1.108c-.251-.21-.582-.299-.905-.245l-1.17.195a1.125 1.125 0 01-.98-.314l-.295-.295a1.125 1.125 0 010-1.591l.13-.132a1.125 1.125 0 011.3-.21l.603.302a.809.809 0 001.086-1.086L14.25 7.5l1.256-.837a4.5 4.5 0 001.528-1.732l.146-.292M6.115 5.19A9 9 0 1017.18 4.64M6.115 5.19A8.965 8.965 0 0112 3c1.929 0 3.716.607 5.18 1.64" />
                                    </svg>
                                </div>

                                <h2 class="mt-6 text-xl font-semibold text-gray-900 dark:text-white">Vibrant Ecosystem</h2>

                                <p class="mt-4 text-gray-500 dark:text-gray-400 text-sm leading-relaxed">
                                    Laravel's robust library of first-party tools and libraries, such as <a href="https://forge.laravel.com" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Forge</a>, <a href="https://vapor.laravel.com" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Vapor</a>, <a href="https://nova.laravel.com" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Nova</a>, and <a href="https://envoyer.io" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Envoyer</a> help you take your projects to the next level. Pair them with powerful open source libraries like <a href="https://laravel.com/docs/billing" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Cashier</a>, <a href="https://laravel.com/docs/dusk" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Dusk</a>, <a href="https://laravel.com/docs/broadcasting" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Echo</a>, <a href="https://laravel.com/docs/horizon" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Horizon</a>, <a href="https://laravel.com/docs/sanctum" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Sanctum</a>, <a href="https://laravel.com/docs/telescope" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Telescope</a>, and more.
                                </p>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="flex justify-center mt-16 px-0 sm:items-center sm:justify-between">
                    <div class="text-center text-sm text-gray-500 dark:text-gray-400 sm:text-left">
                        <div class="flex items-center gap-4">
                            <a href="https://github.com/sponsors/taylorotwell" class="group inline-flex items-center hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">
                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="-mt-px mr-1 w-5 h-5 stroke-gray-400 dark:stroke-gray-600 group-hover:stroke-gray-600 dark:group-hover:stroke-gray-400">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12z" />
                                </svg>
                                Sponsor
                            </a>
                        </div>
                    </div>

                    <div class="ml-4 text-center text-sm text-gray-500 dark:text-gray-400 sm:text-right sm:ml-0">
                        Laravel v{{ Illuminate\Foundation\Application::VERSION }} (PHP v{{ PHP_VERSION }})
                    </div>
                </div>
            </div>
        </div>
    </body>
</html>


















OK... AGORA PODEMOS TRABALHAR NESSE CÓDIGO LARAVEL,


COM ESSE SETUP...




OK.. SALVEI, E AGORA VOU TESTAR....







FUNCIONOU... 









AGORA DEVEMOS ADICIONAR OS OUTROS 2 CONTAINERS,


OS UTILITY CONTAINERS,

QUE 

SERÃO 

USADOS PARA:



1) RODAR MIGRATIONS 




2) HANDLAR CÓDIGO JAVASCRIPT CLIENTSIDE..










DEVEMOS ESTUDAR ESSES 2 CONTAINERS...