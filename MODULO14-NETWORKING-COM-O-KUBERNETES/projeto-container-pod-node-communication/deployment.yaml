apiVersion: apps/v1
kind: Deployment
metadata:
  name: communication-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: communication
  template:
    metadata:
      labels:
        app: communication
    spec:
      containers:
      - name: users-api
        # env:  ///esse env COEXISTE com o 'env' lá da dockerfile... vc pode ter os 2, sim, e aí TER CONTAINERS FUNCIONANDO TANTO EM DEV (docker) COMO EM PROD (kub) usando o mesmo 'process.env.AUTH_ADDRESS', a mesma variável no seu código node...
        #   - name: AUTH_ADDRESS
        #     value: 
        image: nothingnothings/users-api:latest
        imagePullPolicy: Always
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
      - name: auth-api
        image: nothingnothings/auth-api:latest
        imagePullPolicy: Always
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"

        # ports:
        # - containerPort: 8080
          # targetPort: 8080